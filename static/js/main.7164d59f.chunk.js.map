{"version":3,"sources":["constants/palette.ts","components/@common/Icon/Subway.tsx","constants/api.ts","constants/appInfo.ts","constants/css.ts","components/@common/FlexContainer/FlexContainer.tsx","components/@shared/Header/Header.styles.ts","components/@shared/Header/Header.tsx","components/@shared/Main/Main.tsx","constants/storage.ts","util/sessionStorage.ts","redux/loginSlice.ts","storage/service.ts","redux/apiOwnerSlice.ts","api/lines.ts","redux/lineSlice.ts","api/stations.ts","redux/stationSlice.ts","redux/store.ts","components/@shared/StyledLink/StyledLink.tsx","components/@common/Button/Button.tsx","components/@shared/Navigation/Navigation.styles.ts","components/@shared/Navigation/Navigation.tsx","components/@common/CardTemplate/CardTemplate.styles.ts","components/@common/CardTemplate/CardTemplate.tsx","components/@common/ColorRadio/ColorRadio.styles.ts","components/@common/ColorRadio/ColorRadio.tsx","pages/Home/Home.styles.ts","pages/Home/Home.tsx","components/@common/Icon/Add.tsx","components/@common/Icon/Pencil.tsx","components/@common/Icon/TrashBin.tsx","components/@common/ListItem/ListItem.styles.ts","components/@common/ListItem/ListItem.tsx","components/@shared/ButtonOnLine/ButtonOnLine.styles.ts","components/@shared/ButtonOnLine/ButtonOnLine.tsx","constants/message.ts","hooks/useUpdateEffect/useUpdateEffect.ts","util/validator.ts","components/@common/Icon/Close.tsx","components/@common/Modal/Modal.styles.ts","components/@common/Modal/Modal.tsx","components/@common/Input/Input.styles.ts","components/@common/Input/Input.tsx","components/@common/NotificationInput/NotificationInput.styles.ts","components/@common/NotificationInput/NotificationInput.tsx","components/@common/Icon/Arrow.tsx","components/@common/SelectBox/SelectBox.tsx","components/@shared/SectionSelectBox/SectionSelectBox.styles.ts","components/@shared/SectionSelectBox/SectionSelectBox.tsx","components/LinesModal/LinesModal.styles.ts","components/LinesModal/LineAddModal.tsx","components/LinesModal/LineModifyModal.tsx","hooks/useModal/useModal.ts","pages/Lines/Lines.styles.ts","pages/Lines/Lines.tsx","api/member.ts","components/@common/Icon/Email.tsx","components/@common/Icon/Lock.tsx","pages/Login/Login.styles.ts","pages/Login/Login.tsx","components/SectionsModal/SectionsModal.styles.ts","components/SectionsModal/SectionAddModal.tsx","pages/Stations/Stations.styles.ts","pages/Sections/Section.styles.ts","pages/Sections/Sections.tsx","components/@common/Icon/Person.tsx","pages/Signup/Signup.styles.ts","pages/Signup/Signup.tsx","components/@common/HorizontalLine/HorizontalLine.tsx","pages/Stations/Stations.tsx","App.tsx","Global.styles.ts","index.tsx"],"names":["PALETTE","BLACK","RED","ORANGE","YELLOW","GREEN","LIME","BLUE","INDIGO","PURPLE","PINK","CYAN","GRAY","Subway","width","color","xmlns","viewBox","height","fill","d","API_INFO","FAFI","name","endPoint","themeColor","JOEl","JOAN","JAYON","PAGE_INFO","HOME","text","path","LOGIN","SIGN_UP","STATIONS","LINES","SECTIONS","COMMON_NAV_LIST","LINE_COLORS","STATION","LINE","SECTION","SIGNUP","Z_INDEX","FlexContainer","styled","div","direction","justifyContent","alignItems","StyledHeader","header","TitleContainer","defaultProps","Header","children","title","logo","apiOwner","useSelector","state","api","owner","to","Main","main","SESSION_STORAGE_KEY","getSessionStorageItem","key","sessionStorage","getItem","setSessionStorageItem","value","setItem","loginSlice","createSlice","initialState","isLogin","reducers","login","action","payload","logout","removeItem","actions","getApiOwner","getBearerToken","apiOwnerSlice","changeOwner","requestAddLine","addLineRequestData","axios","post","requestDeleteLine","lineId","delete","requestModifyLine","put","requestAddSection","upStationId","downStationId","distance","requestDeleteSection","stationId","loadLines","createAsyncThunk","_","a","rejectWithValue","get","response","data","addLine","deleteLine","modifyLine","modifyLineRequestData","isLoading","errorMessage","lines","lineSlice","clearLines","extraReducers","builder","addCase","pending","fulfilled","rejected","error","message","filter","line","id","map","requestAddStation","stationName","requestDeleteStation","loadStations","addStation","deleteStation","stations","stationSlice","clearStations","rootReducer","combineReducers","apiReducer","loginReducer","station","stationReducer","lineReducer","store","configureStore","reducer","clearRootReducer","dispatch","useAppDispatch","useDispatch","StyledLink","Link","buttonTypeCSS","round","css","square","StyledButton","button","buttonType","isColored","coloredCSS","Button","options","NavList","ul","NavButton","Navigation","navInfoList","history","useHistory","navInfo","index","type","onClick","push","TITLE_SIZE","sm","md","lg","CardTemplateTitle","StyledCardTemplate","templateColor","titleSize","isColoredTitle","CardTemplate","titleText","ColorRadioLabel","label","ColorRadioInput","input","radioColor","ColorRadioLabelText","span","ColorRadio","groupName","labelText","checked","APIForm","form","APIList","Home","useState","selectedAPI","setSelectedAPI","onChangeApi","event","target","onSubmit","preventDefault","Object","keys","apiInfoKey","isVisible","onChange","Add","Pencil","TrashBin","x","y","StyledListItem","li","ListContent","ListItemButton","ListItem","onModify","onDelete","ButtonOnLineContainer","ButtonOnLine","ERROR_MESSAGE","INVALID_EMAIL","DUPLICATED_EMAIL","INVALID_RANGE_OF_AGE","INVALID_RANGE_OF_PASSWORD","INVALID_PASSWORD","INVALID_SIGNUP_INPUT","PASSWORD_CONFIRM_FAILURE","LOGIN_FAILURE","INVALID_STATION_NAME","DUPLICATED_STATION_NAME","INVALID_LINE_NAME","DUPLICATED_SECTION","NONE_OF_SELECTED_SECTION","SHOULD_CONTAIN_ONE_STATION_IN_LINE","DELETE_SECTION_FAILURE","NOT_SELECTED_LINE","INCOMPLETE_FORM","SUCCESS_MESSAGE","CONFIRM_MESSAGE","useUpdateEffect","effect","dependencies","isFirstMount","useRef","useEffect","current","isKoreanAndNumber","test","Close","stroke","strokeLinecap","strokeWidth","ModalContainer","ModalInner","CloseButton","ModalTitle","h2","ModalContent","hasTitle","$modalRoot","document","getElementById","Modal","onClose","ReactDOM","createPortal","onMouseDown","currentTarget","LabelText","StyledLabel","LabelIcon","Input","className","labelIcon","option","NotificationInputContainer","NotificationText","p","isError","NotificationInput","Arrow","SelectBox","select","SectionSelectBoxContainer","StationSelectBox","StationsSelectContainer","SectionSelectErrorMessage","SectionSelectBox","upStationOptions","downStationOptions","LineForm","LineColorContainer","LineModalButtonContainer","LineAddModal","usedLineColors","useMemo","alert","formInput","setFormInput","section","validationErrorMessage","setValidationErrorMessage","length","isUsedLineColor","includes","onChangeLineColor","values","some","Number","minLength","maxLength","placeholder","required","valueAsNumber","min","disabled","LineModifyModal","usedLineColor","ele","useModal","initModalData","isModalOpen","setIsModalOpen","modalData","setModalData","openModal","closeModal","passDataToModal","LineList","LineColorDot","dotColor","Lines","lineAddModal","lineModifyModal","onOpenModifyModal","selectedLine","find","confirm","requestSignup","memberInfo","requestLogin","loginInfo","Email","Lock","opacity","LoginContainer","LoginForm","LoginErrorMessage","LoginButton","SignupLink","Login","setErrorMessage","onLogin","email","password","accessToken","SectionForm","SectionModalButtonContainer","SectionAddModal","isStationInLine","targetId","numberOfStationAddedInLine","onAddSection","StationNameInput","StationForm","StationName","StationList","LineSelectBox","LineInfoContainer","Sections","stationErrorMessage","lineErrorMessage","sectionAddModal","targetLineId","setTargetLineId","targetLine","Person","SignupNotificationInput","SignupForm","SignupButton","Signup","age","passwordConfirm","isReadyToSubmit","setIsReadyToSubmit","every","onSignup","isEmail","String","max","isEnglishAndNumber","HorizontalLine","hr","Stations","stationInput","setStationInput","isValidStationInput","defaults","baseURL","headers","common","App","exact","GlobalStyle","createGlobalStyle","render","StrictMode"],"mappings":"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","file":"static/js/main.7164d59f.chunk.js","sourcesContent":["export interface Color {\n  '200'?: string;\n  '300': string;\n  '400': string;\n  '500': string;\n  '600'?: string;\n  '700'?: string;\n}\n\nconst PALETTE: { [key: string]: Color } = {\n  BLACK: {\n    '300': '#444444',\n    '400': '#333333',\n    '500': '#222222',\n  },\n  RED: {\n    '300': '#FCA5A5',\n    '400': '#F87171',\n    '500': '#EF4444',\n  },\n  ORANGE: {\n    '300': '#FDBA74',\n    '400': '#FB923C',\n    '500': '#F97316',\n  },\n  YELLOW: {\n    '300': '#FDE68A',\n    '400': '#FCD34D',\n    '500': '#FBBF24',\n  },\n  GREEN: {\n    '300': '#34D399',\n    '400': '#10B981',\n    '500': '#059669',\n  },\n  LIME: {\n    '300': '#BEF264',\n    '400': '#A3E635',\n    '500': '#84CC16',\n  },\n  BLUE: {\n    '300': '#7DD3FC',\n    '400': '#38BDF8',\n    '500': '#0EA5E9',\n  },\n  INDIGO: {\n    '300': '#A5B4FC',\n    '400': '#818CF8',\n    '500': '#6366F1',\n  },\n  PURPLE: {\n    '300': '#C4B5FD',\n    '400': '#A78BFA',\n    '500': '#8B5CF6',\n  },\n  PINK: {\n    '300': '#F9A8D4',\n    '400': '#F472B6',\n    '500': '#EC4899',\n  },\n  CYAN: {\n    '300': '#67E8F9',\n    '400': '#22D3EE',\n    '500': '#06B6D4',\n  },\n  GRAY: {\n    '200': '#EEEEEE',\n    '300': '#CCCCCC',\n    '400': '#AAAAAA',\n    '500': '#999999',\n    '600': '#777777',\n    '700': '#555555',\n  },\n};\n\nexport default PALETTE;\n","import PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport PALETTE from '../../../constants/palette';\n\ninterface Props {\n  width?: string;\n  color?: string;\n}\n\nconst Subway: FC<Props> = ({ width = '24px', color = PALETTE.GRAY[400] }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={width}\n      height={width}\n      fill={color}\n    >\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n      <path d=\"M17.8 2.8C16 2.09 13.86 2 12 2s-4 .09-5.8.8C3.53 3.84 2 6.05 2 8.86V22h20V8.86c0-2.81-1.53-5.02-4.2-6.06zM9.17 20l1.5-1.5h2.66l1.5 1.5H9.17zm-2.16-6V9h10v5h-10zm9.49 2c0 .55-.45 1-1 1s-1-.45-1-1 .45-1 1-1 1 .45 1 1zm-8-1c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM20 20h-3.5v-.38l-1.15-1.16c1.49-.17 2.65-1.42 2.65-2.96V9c0-2.63-3-3-6-3s-6 .37-6 3v6.5c0 1.54 1.16 2.79 2.65 2.96L7.5 19.62V20H4V8.86c0-2 1.01-3.45 2.93-4.2C8.41 4.08 10.32 4 12 4s3.59.08 5.07.66c1.92.75 2.93 2.2 2.93 4.2V20z\" />\n    </svg>\n  );\n};\n\nSubway.propTypes = {\n  width: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default Subway;\n","import PALETTE, { Color } from './palette';\n\ninterface APIInfo {\n  name: string;\n  endPoint: string;\n  themeColor: Color;\n}\n\nexport const API_INFO: { [key: string]: APIInfo } = {\n  FAFI: {\n    name: '파피',\n    endPoint: 'https://fafi-subway.o-r.kr',\n    themeColor: PALETTE.GREEN,\n  },\n  JOEl: {\n    name: '조엘',\n    endPoint: 'https://joel-subway.kro.kr',\n    themeColor: PALETTE.YELLOW,\n  },\n  JOAN: {\n    name: '조앤',\n    endPoint: 'https://anne-subway.r-e.kr',\n    themeColor: PALETTE.RED,\n  },\n  JAYON: {\n    name: '제이온',\n    endPoint: 'https://jayon-subway.r-e.kr',\n    themeColor: PALETTE.CYAN,\n  },\n};\n\nexport const DEFAULT_API_OWNER = 'FAFI';\n","import { Page } from './../types';\nimport PALETTE, { Color } from './palette';\n\nexport const APP_TITLE = 'SUNKIST';\n\nexport const PAGE_INFO: { [key: string]: Page } = {\n  HOME: {\n    text: 'API 선택',\n    path: '/',\n  },\n  LOGIN: {\n    text: '로그인',\n    path: '/login',\n  },\n  SIGN_UP: {\n    text: '회원가입',\n    path: '/signup',\n  },\n  STATIONS: {\n    text: '역 관리',\n    path: '/stations',\n  },\n  LINES: {\n    text: '노선 관리',\n    path: '/lines',\n  },\n  SECTIONS: {\n    text: '구간 관리',\n    path: '/sections',\n  },\n};\n\nexport const COMMON_NAV_LIST = [PAGE_INFO.STATIONS, PAGE_INFO.LINES, PAGE_INFO.SECTIONS];\n\nexport const THEME_COLOR: Color = PALETTE.YELLOW;\n\nexport const LINE_COLORS: string[] = [\n  PALETTE.RED[400],\n  PALETTE.ORANGE[400],\n  PALETTE.YELLOW[400],\n  PALETTE.GREEN[400],\n  PALETTE.LIME[400],\n  PALETTE.BLUE[400],\n  PALETTE.INDIGO[400],\n  PALETTE.PURPLE[400],\n  PALETTE.PINK[400],\n  PALETTE.CYAN[400],\n];\n\nexport const STATION = {\n  NAME_MIN_LENGTH: 2,\n  NAME_MAX_LENGTH: 10,\n  NAME_LABEL_TEXT: '지하철 역 이름을 입력해주세요',\n};\n\nexport const LINE = {\n  ADD_MODAL_TITLE: '노선 추가',\n  MODIFY_MODAL_TITLE: '노선 수정',\n  NAME_MIN_LENGTH: 2,\n  NAME_MAX_LENGTH: 10,\n  NAME_LABEL_TEXT: '노선 이름',\n  NAME_PLACEHOLDER: '노선 이름',\n  DISTANCE_LABEL_TEXT: '거리',\n  COLOR_LABEL_TEXT: '노선색상',\n  COLOR_SELECT_NAME: 'lineColor',\n};\n\nexport const SECTION = {\n  MIN_DISTANCE: 1,\n  DISTANCE_LABEL_TEXT: '거리',\n  LINE_SELECT_TEXT: '노선을 선택해주세요',\n  ADD_MODAL_TITLE: '구간 추가',\n};\n\nexport const SIGNUP = {\n  MIN_AGE: 1,\n  MAX_AGE: 150,\n  PASSWORD_MIN_LENGTH: 4,\n  PASSWORD_MAX_LENGTH: 20,\n};\n","export const Z_INDEX = {\n  HEADER: 9,\n  MODAL: 10,\n};\n","import styled from 'styled-components';\n\ninterface Props {\n  direction?: 'column';\n  justifyContent?: 'center' | 'flex-end' | 'space-between' | 'space-around';\n  alignItems?: 'center' | 'flex-end';\n}\n\nconst FlexContainer = styled.div<Props>`\n  display: flex;\n  ${({ direction }) => direction && `flex-direction: ${direction};`}\n  ${({ justifyContent }) => justifyContent && `justify-content: ${justifyContent};`}\n  ${({ alignItems }) => alignItems && `align-items: ${alignItems};`};\n`;\n\nexport default FlexContainer;\n","import { Z_INDEX } from './../../../constants/css';\nimport styled from 'styled-components';\nimport { Color } from '../../../constants/palette';\nimport FlexContainer from '../../@common/FlexContainer/FlexContainer';\n\nexport const StyledHeader = styled.header<{ themeColor: Color }>`\n  position: sticky;\n  top: 0;\n  z-index: ${Z_INDEX.HEADER};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${({ themeColor }) => themeColor[400]};\n  padding: 1.25rem 2rem;\n`;\n\nexport const TitleContainer = styled(FlexContainer)`\n  & > * {\n    margin-right: 1rem;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nTitleContainer.defaultProps = {\n  alignItems: 'center',\n};\n","import PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { API_INFO } from '../../../constants/api';\nimport { PAGE_INFO } from '../../../constants/appInfo';\nimport { RootState } from '../../../redux/store';\nimport { StyledHeader, TitleContainer } from './Header.styles';\n\ninterface Props {\n  children?: React.ReactNode;\n  title: string;\n  logo?: React.ReactNode;\n}\n\nconst Header: FC<Props> = ({ children, title, logo }) => {\n  const apiOwner = useSelector((state: RootState) => state.api.owner);\n\n  return (\n    <StyledHeader themeColor={API_INFO[apiOwner].themeColor}>\n      <Link to={PAGE_INFO.HOME.path}>\n        <TitleContainer>\n          {logo}\n          <h1>{title}</h1>\n        </TitleContainer>\n      </Link>\n      {children}\n    </StyledHeader>\n  );\n};\n\nHeader.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string.isRequired,\n  logo: PropTypes.node,\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst Main = styled.main`\n  margin: 0 auto;\n  padding: 3.5rem 0;\n  width: 700px;\n`;\n\nexport default Main;\n","export const SESSION_STORAGE_KEY: { [key: string]: string } = {\n  ACCESS_TOKEN: 'accessToken',\n  API_OWNER: 'api',\n};\n","export const getSessionStorageItem = (key: string): string | null => sessionStorage.getItem(key);\n\nexport const setSessionStorageItem = (key: string, value: string): void => {\n  sessionStorage.setItem(key, value);\n};\n\nexport const removeSessionStorageItem = (key: string): void => {\n  sessionStorage.removeItem(key);\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { SESSION_STORAGE_KEY } from '../constants/storage';\nimport {\n  getSessionStorageItem,\n  removeSessionStorageItem,\n  setSessionStorageItem,\n} from '../util/sessionStorage';\n\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState: {\n    isLogin: getSessionStorageItem(SESSION_STORAGE_KEY.ACCESS_TOKEN) !== null,\n  },\n  reducers: {\n    login: (state, action) => {\n      setSessionStorageItem(SESSION_STORAGE_KEY.ACCESS_TOKEN, action.payload);\n      state.isLogin = true;\n    },\n    logout: (state) => {\n      removeSessionStorageItem(SESSION_STORAGE_KEY.ACCESS_TOKEN);\n      state.isLogin = false;\n    },\n  },\n});\n\nexport const { login, logout } = loginSlice.actions;\n\nexport default loginSlice.reducer;\n","import { SESSION_STORAGE_KEY } from '../constants/storage';\nimport { getSessionStorageItem } from '../util/sessionStorage';\nimport { DEFAULT_API_OWNER } from './../constants/api';\n\nexport const getApiOwner = (): string =>\n  getSessionStorageItem(SESSION_STORAGE_KEY.API_OWNER) || DEFAULT_API_OWNER;\n\nexport const getBearerToken = (): string | null =>\n  `bearer ${getSessionStorageItem(SESSION_STORAGE_KEY.ACCESS_TOKEN)}` || null;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { SESSION_STORAGE_KEY } from '../constants/storage';\nimport { setSessionStorageItem } from '../util/sessionStorage';\nimport { getApiOwner } from './../storage/service';\n\nexport const apiOwnerSlice = createSlice({\n  name: 'api',\n  initialState: {\n    owner: getApiOwner(),\n  },\n  reducers: {\n    changeOwner: (state, action) => {\n      setSessionStorageItem(SESSION_STORAGE_KEY.API_OWNER, action.payload);\n      state.owner = action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { changeOwner } = apiOwnerSlice.actions;\n\nexport default apiOwnerSlice.reducer;\n","import axios, { AxiosResponse } from 'axios';\nimport { Line } from '../types';\n\nexport interface AddLineRequestData {\n  name: string;\n  color: string;\n  upStationId: number;\n  downStationId: number;\n  distance: number;\n}\n\nexport interface ModifyLineRequestData {\n  // TODO: lineId -> id\n  lineId: number;\n  name: string;\n  color: string;\n}\n\ninterface AddSectionRequestData {\n  lineId: number;\n  upStationId: number;\n  downStationId: number;\n  distance: number;\n}\n\ninterface DeleteSectionRequestData {\n  lineId: number;\n  stationId: number;\n}\n\nexport const requestGetLines = (): Promise<AxiosResponse<Line[]>> => axios.get(`/lines`);\n\nexport const requestAddLine = (\n  addLineRequestData: AddLineRequestData\n): Promise<AxiosResponse<Line[]>> => axios.post(`/lines`, addLineRequestData);\n\nexport const requestDeleteLine = (lineId: number): Promise<AxiosResponse> =>\n  axios.delete(`/lines/${lineId}`);\n\nexport const requestModifyLine = ({\n  lineId,\n  name,\n  color,\n}: ModifyLineRequestData): Promise<AxiosResponse> =>\n  axios.put(`/lines/${lineId}`, {\n    name,\n    color,\n  });\n\nexport const requestAddSection = ({\n  lineId,\n  upStationId,\n  downStationId,\n  distance,\n}: AddSectionRequestData): Promise<AxiosResponse> =>\n  axios.post(`/lines/${lineId}/sections`, {\n    upStationId,\n    downStationId,\n    distance,\n  });\n\nexport const requestDeleteSection = ({\n  lineId,\n  stationId,\n}: DeleteSectionRequestData): Promise<AxiosResponse> =>\n  axios.delete(`/lines/${lineId}/sections?stationId=${stationId}`);\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {\n  AddLineRequestData,\n  ModifyLineRequestData,\n  requestAddLine,\n  requestDeleteLine,\n  requestGetLines,\n  requestModifyLine,\n} from '../api/lines';\nimport { Line } from '../types';\nimport { ErrorMessageResponse } from './store';\n\nexport const loadLines = createAsyncThunk<Line[], undefined, { rejectValue: ErrorMessageResponse }>(\n  'line/load',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await requestGetLines();\n\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const addLine = createAsyncThunk<\n  Line[],\n  AddLineRequestData,\n  { rejectValue: ErrorMessageResponse }\n>('line/add', async (addLineRequestData: AddLineRequestData, { rejectWithValue }) => {\n  try {\n    const response = await requestAddLine(addLineRequestData);\n\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\nexport const deleteLine = createAsyncThunk<number, number, { rejectValue: ErrorMessageResponse }>(\n  'line/delete',\n  async (lineId: number, { rejectWithValue }) => {\n    try {\n      await requestDeleteLine(lineId);\n\n      return lineId;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const modifyLine = createAsyncThunk<\n  ModifyLineRequestData,\n  ModifyLineRequestData,\n  { rejectValue: ErrorMessageResponse }\n>('line/modify', async (modifyLineRequestData: ModifyLineRequestData, { rejectWithValue }) => {\n  try {\n    await requestModifyLine(modifyLineRequestData);\n\n    return modifyLineRequestData;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\nconst initialState = {\n  isLoading: false,\n  errorMessage: '',\n  lines: [] as Line[],\n};\n\nconst lineSlice = createSlice({\n  name: 'line',\n  initialState,\n  reducers: {\n    clearLines: (state) => initialState,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(loadLines.pending, (state) => {\n      state.isLoading = true;\n      state.errorMessage = '';\n    });\n    builder.addCase(loadLines.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.lines = action.payload;\n    });\n    builder.addCase(loadLines.rejected, (state, action) => {\n      state.isLoading = false;\n      state.errorMessage = action.error.message as string;\n    });\n\n    builder.addCase(addLine.pending, (state) => {\n      state.isLoading = true;\n      state.errorMessage = '';\n    });\n    builder.addCase(addLine.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.lines = [...state.lines, action.payload] as Line[];\n    });\n    builder.addCase(addLine.rejected, (state, action) => {\n      state.isLoading = false;\n      state.errorMessage = (action.payload as ErrorMessageResponse).errorMessage;\n    });\n\n    builder.addCase(deleteLine.pending, (state) => {\n      state.isLoading = true;\n      state.errorMessage = '';\n    });\n    builder.addCase(deleteLine.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.lines = state.lines.filter((line) => line.id !== action.payload);\n    });\n    builder.addCase(deleteLine.rejected, (state, action) => {\n      state.isLoading = false;\n      state.errorMessage = (action.payload as ErrorMessageResponse).errorMessage;\n    });\n\n    builder.addCase(modifyLine.pending, (state) => {\n      state.isLoading = true;\n      state.errorMessage = '';\n    });\n    builder.addCase(modifyLine.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.lines = state.lines.map((line) =>\n        line.id === action.payload.lineId\n          ? { ...line, name: action.payload.name, color: action.payload.color }\n          : line\n      );\n    });\n    builder.addCase(modifyLine.rejected, (state, action) => {\n      state.isLoading = false;\n      state.errorMessage = (action.payload as ErrorMessageResponse).errorMessage;\n    });\n  },\n});\n\nexport const { clearLines } = lineSlice.actions;\n\nexport default lineSlice.reducer;\n","import axios, { AxiosResponse } from 'axios';\nimport { Station } from '../types';\n\nexport const requestGetStations = (): Promise<AxiosResponse<Station[]>> => axios.get(`/stations`);\n\nexport const requestAddStation = (stationName: string): Promise<AxiosResponse<Station>> =>\n  axios.post(`/stations`, {\n    name: stationName,\n  });\n\nexport const requestDeleteStation = (stationId: number): Promise<AxiosResponse> =>\n  axios.delete(`/stations/${stationId}`);\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { Station } from '../types';\nimport { requestAddStation, requestDeleteStation, requestGetStations } from './../api/stations';\nimport { ErrorMessageResponse } from './store';\n\nexport const loadStations = createAsyncThunk<\n  Station[],\n  undefined,\n  { rejectValue: ErrorMessageResponse }\n>('station/load', async (_, { rejectWithValue }) => {\n  try {\n    const response = await requestGetStations();\n\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\nexport const addStation = createAsyncThunk<Station, string, { rejectValue: ErrorMessageResponse }>(\n  'station/add',\n  async (stationName: string, { rejectWithValue }) => {\n    try {\n      const response = await requestAddStation(stationName);\n\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const deleteStation = createAsyncThunk<\n  number,\n  number,\n  { rejectValue: ErrorMessageResponse }\n>('station/delete', async (stationId, { rejectWithValue }) => {\n  try {\n    await requestDeleteStation(stationId);\n\n    return stationId;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\nconst initialState = {\n  isLoading: false,\n  errorMessage: '',\n  stations: [] as Station[],\n};\n\nconst stationSlice = createSlice({\n  name: 'station',\n  initialState,\n  reducers: {\n    clearStations: (state) => initialState,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(loadStations.pending, (state) => {\n      state.isLoading = true;\n      state.errorMessage = '';\n    });\n    builder.addCase(loadStations.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.stations = action.payload;\n    });\n    builder.addCase(loadStations.rejected, (state, action) => {\n      state.isLoading = false;\n      state.errorMessage = (action.payload as ErrorMessageResponse).errorMessage;\n    });\n\n    builder.addCase(addStation.pending, (state) => {\n      state.isLoading = true;\n      state.errorMessage = '';\n    });\n    builder.addCase(addStation.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.stations = [action.payload, ...state.stations];\n    });\n    builder.addCase(addStation.rejected, (state, action) => {\n      state.isLoading = false;\n      state.errorMessage = (action.payload as ErrorMessageResponse).errorMessage;\n    });\n\n    builder.addCase(deleteStation.pending, (state) => {\n      state.isLoading = true;\n      state.errorMessage = '';\n    });\n    builder.addCase(deleteStation.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.stations = state.stations.filter(({ id }) => id !== action.payload);\n    });\n    builder.addCase(deleteStation.rejected, (state, action) => {\n      state.isLoading = false;\n      state.errorMessage = (action.payload as ErrorMessageResponse).errorMessage;\n    });\n  },\n});\n\nexport const { clearStations } = stationSlice.actions;\n\nexport default stationSlice.reducer;\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport apiReducer from './apiOwnerSlice';\nimport lineReducer, { clearLines } from './lineSlice';\nimport loginReducer from './loginSlice';\nimport stationReducer, { clearStations } from './stationSlice';\n\nconst rootReducer = combineReducers({\n  api: apiReducer,\n  login: loginReducer,\n  station: stationReducer,\n  line: lineReducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport const clearRootReducer = (): void => {\n  store.dispatch(clearStations());\n  store.dispatch(clearLines());\n};\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport interface ErrorMessageResponse {\n  errorMessage: string;\n}\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>(); // Export a hook that can be reused to resolve types\n\nexport default store;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: block;\n  position: relative;\n  background-color: transparent;\n  border-radius: 8px;\n  padding: 0.75rem 1rem;\n  font-weight: 600;\n  overflow: hidden;\n  text-align: center;\n\n  &:hover::after {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.07);\n  }\n`;\n\nexport default StyledLink;\n","import PropTypes from 'prop-types';\nimport React, { ButtonHTMLAttributes, FC, ReactNode } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport { API_INFO } from '../../../constants/api';\nimport PALETTE, { Color } from '../../../constants/palette';\nimport { RootState } from '../../../redux/store';\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  buttonType?: 'square' | 'round';\n  isColored?: boolean;\n  children: ReactNode;\n}\n\ninterface StyledButtonProps extends Props {\n  themeColor: Color;\n}\n\nconst buttonTypeCSS = {\n  round: css`\n    border-radius: 50%;\n    width: 4.5rem;\n    height: 4.5rem;\n  `,\n  square: css`\n    border-radius: 4px;\n    padding: 0.625rem 1.25rem;\n  `,\n};\n\nconst coloredCSS = (themeColor: Color) => css`\n  background-color: ${themeColor[400]};\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n`;\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  border: none;\n  font-size: 1.125rem;\n  background-color: transparent;\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${({ buttonType }) => buttonType && buttonTypeCSS[buttonType]}\n  ${({ isColored, themeColor }) => isColored && coloredCSS(themeColor)}\n\n  &:enabled:hover::after {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.07);\n  }\n\n  &:disabled {\n    ${({ isColored, themeColor }) => isColored && `background-color: ${themeColor[300]};`}\n    color: ${PALETTE.GRAY[400]};\n    cursor: default;\n  }\n`;\n\nexport const Button: FC<Props> = ({ children, buttonType, isColored, ...options }) => {\n  const apiOwner = useSelector((state: RootState) => state.api.owner);\n\n  return (\n    <StyledButton\n      buttonType={buttonType}\n      isColored={isColored}\n      themeColor={API_INFO[apiOwner].themeColor as Color}\n      {...options}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node,\n  buttonType: PropTypes.oneOf(['square', 'round']),\n  isColored: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  buttonType: 'square',\n  isColored: true,\n};\n\nexport default Button;\n","import styled from 'styled-components';\nimport Button from '../../@common/Button/Button';\n\nexport const NavList = styled.ul`\n  display: flex;\n\n  li {\n    margin-left: 0.25rem;\n\n    &:first-child {\n      margin-left: 0;\n    }\n  }\n`;\n\nexport const NavButton = styled(Button)`\n  padding: 0.75rem 1rem;\n  font-weight: 600;\n  font-size: 1rem;\n`;\n","import PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { PAGE_INFO } from '../../../constants/appInfo';\nimport { logout } from '../../../redux/loginSlice';\nimport { clearRootReducer, RootState, useAppDispatch } from '../../../redux/store';\nimport { Page } from '../../../types';\nimport StyledLink from '../StyledLink/StyledLink';\nimport { NavButton, NavList } from './Navigation.styles';\n\ninterface Props {\n  navInfoList: Page[];\n}\n\nconst Navigation: FC<Props> = ({ navInfoList }) => {\n  const isLogin = useSelector((state: RootState) => state.login.isLogin);\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n\n  const onLogout = () => {\n    dispatch(logout());\n    clearRootReducer();\n    history.push(PAGE_INFO.HOME.path);\n  };\n\n  return (\n    <nav>\n      <NavList>\n        {navInfoList.map((navInfo, index) => (\n          <li key={index}>\n            <StyledLink to={navInfo.path}>{navInfo.text}</StyledLink>\n          </li>\n        ))}\n        <li>\n          {isLogin ? (\n            <NavButton type=\"button\" onClick={onLogout} isColored={false}>\n              로그아웃\n            </NavButton>\n          ) : (\n            <StyledLink to={PAGE_INFO.LOGIN.path}>{PAGE_INFO.LOGIN.text}</StyledLink>\n          )}\n        </li>\n      </NavList>\n    </nav>\n  );\n};\n\nNavigation.propTypes = {\n  navInfoList: PropTypes.array.isRequired,\n};\n\nexport default Navigation;\n","import styled from 'styled-components';\nimport PALETTE from '../../../constants/palette';\n\ninterface StyledCardTemplateProps {\n  templateColor?: string;\n  isColoredTitle?: boolean;\n  titleSize: 'sm' | 'md' | 'lg';\n}\n\nconst TITLE_SIZE = {\n  sm: '1.75rem',\n  md: '2.25rem',\n  lg: '3rem',\n};\n\nexport const CardTemplateTitle = styled.div``;\n\nexport const StyledCardTemplate = styled.div<StyledCardTemplateProps>`\n  border: 1px solid ${PALETTE.GRAY[300]};\n  border-radius: 10px;\n  box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    display: block;\n    background-color: ${({ templateColor }) => templateColor};\n    width: 100%;\n    height: 1rem;\n  }\n\n  & > ${CardTemplateTitle} {\n    font-weight: bold;\n    font-size: ${({ titleSize }) => TITLE_SIZE[titleSize]};\n    padding: 1rem 1.5rem;\n    ${({ isColoredTitle, templateColor }) =>\n      isColoredTitle\n        ? `background-color: ${templateColor}; text-align: left; transform: translateY(-1rem);`\n        : 'text-align: center; padding: 3rem 0;'}\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport PALETTE from '../../../constants/palette';\nimport { CardTemplateTitle, StyledCardTemplate } from './CardTemplate.styles';\n\ninterface Props {\n  children: React.ReactNode;\n  templateColor?: string;\n  isColoredTitle?: boolean;\n  titleText?: string;\n  titleSize?: 'sm' | 'md' | 'lg';\n}\n\nconst CardTemplate: FC<Props> = ({\n  children,\n  templateColor = PALETTE.YELLOW[400],\n  isColoredTitle,\n  titleText,\n  titleSize = 'md',\n}) => {\n  return (\n    <StyledCardTemplate\n      templateColor={templateColor}\n      isColoredTitle={isColoredTitle}\n      titleSize={titleSize}\n    >\n      {titleText && <CardTemplateTitle>{titleText}</CardTemplateTitle>}\n      {children}\n    </StyledCardTemplate>\n  );\n};\n\nCardTemplate.propTypes = {\n  children: PropTypes.node.isRequired,\n  templateColor: PropTypes.string,\n  isColoredTitle: PropTypes.bool,\n  titleText: PropTypes.string,\n  titleSize: PropTypes.oneOf(['sm', 'md', 'lg']),\n};\n\nexport default CardTemplate;\n","import { InputHTMLAttributes } from 'react';\nimport styled from 'styled-components';\n\ninterface ColorRadioInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  radioColor: string;\n}\n\nexport const ColorRadioLabel = styled.label`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport const ColorRadioInput = styled.input<ColorRadioInputProps>`\n  appearance: none;\n  position: relative;\n\n  &::before {\n    content: '';\n    display: block;\n    width: 1.5rem;\n    height: 1.5rem;\n    border-radius: 50%;\n    background-color: ${({ radioColor }) => radioColor};\n    cursor: pointer;\n  }\n\n  &:checked::before {\n    transform: scale(1.1);\n  }\n\n  &:checked::after {\n    content: '✔';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate3d(-50%, -50%, 0);\n    color: white;\n    cursor: pointer;\n  }\n\n  &:disabled::before {\n    cursor: not-allowed;\n  }\n\n  &:disabled::after {\n    content: '✘';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate3d(-50%, -50%, 0);\n    color: white;\n    cursor: not-allowed;\n  }\n`;\n\nexport const ColorRadioLabelText = styled.span`\n  margin-left: 0.5rem;\n`;\n","import PropTypes from 'prop-types';\nimport React, { FC, InputHTMLAttributes } from 'react';\nimport { ColorRadioInput, ColorRadioLabel, ColorRadioLabelText } from './ColorRadio.styles';\n\ninterface LabelText {\n  text: string;\n  isVisible: boolean;\n}\n\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\n  groupName: string;\n  radioColor: string;\n  labelText?: LabelText;\n}\n\nconst ColorRadio: FC<Props> = ({\n  groupName,\n  radioColor,\n  labelText,\n  checked = false,\n  ...options\n}) => {\n  return (\n    <ColorRadioLabel>\n      <ColorRadioInput\n        type=\"radio\"\n        name={groupName}\n        radioColor={radioColor}\n        checked={checked}\n        {...options}\n      />\n      {labelText && <ColorRadioLabelText>{labelText.text}</ColorRadioLabelText>}\n    </ColorRadioLabel>\n  );\n};\n\nColorRadio.propTypes = {\n  groupName: PropTypes.string.isRequired,\n  radioColor: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  labelText: PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    isVisible: PropTypes.bool.isRequired,\n  }),\n};\n\nexport default ColorRadio;\n","import styled from 'styled-components';\n\nexport const APIForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 5rem 3rem 3rem;\n`;\n\nexport const APIList = styled.ul`\n  font-size: 1.25rem;\n  width: 400px;\n  display: flex;\n  justify-content: space-between;\n  margin: 0 auto 4rem;\n`;\n","import React, { ChangeEvent, FC, FormEvent, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Button from '../../components/@common/Button/Button';\nimport CardTemplate from '../../components/@common/CardTemplate/CardTemplate';\nimport ColorRadio from '../../components/@common/ColorRadio/ColorRadio';\nimport { API_INFO } from '../../constants/api';\nimport { changeOwner } from '../../redux/apiOwnerSlice';\nimport { logout } from '../../redux/loginSlice';\nimport { clearRootReducer, RootState, useAppDispatch } from '../../redux/store';\nimport { APIForm, APIList } from './Home.styles';\n\nconst Home: FC = () => {\n  const apiOwner = useSelector((state: RootState) => state.api.owner);\n  const dispatch = useAppDispatch();\n  const [selectedAPI, setSelectedAPI] = useState(apiOwner);\n\n  const onChangeApi = (event: ChangeEvent<HTMLInputElement>) => {\n    const owner = event.target.value;\n    setSelectedAPI(owner);\n  };\n\n  const onSubmitAPI = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (apiOwner === selectedAPI) return;\n\n    clearRootReducer();\n    dispatch(logout());\n    dispatch(changeOwner(selectedAPI));\n  };\n\n  return (\n    <CardTemplate titleText=\"API 선택\" templateColor={API_INFO[apiOwner].themeColor[400]}>\n      <APIForm onSubmit={onSubmitAPI}>\n        <APIList>\n          {Object.keys(API_INFO).map((apiInfoKey) => (\n            <li key={apiInfoKey}>\n              <ColorRadio\n                groupName=\"api\"\n                value={apiInfoKey}\n                radioColor={API_INFO[apiInfoKey].themeColor[300] as string}\n                labelText={{ text: API_INFO[apiInfoKey].name, isVisible: true }}\n                checked={apiInfoKey === selectedAPI}\n                onChange={onChangeApi}\n              />\n            </li>\n          ))}\n        </APIList>\n        <Button>선택</Button>\n      </APIForm>\n    </CardTemplate>\n  );\n};\n\nexport default Home;\n","import PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport PALETTE from '../../../constants/palette';\n\ninterface Props {\n  width?: string;\n  color?: string;\n}\n\nconst Add: FC<Props> = ({ width = '24px', color = PALETTE.GRAY[400] }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={width}\n      height={width}\n      fill={color}\n    >\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n      <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\n    </svg>\n  );\n};\n\nAdd.propTypes = {\n  width: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default Add;\n","import PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport PALETTE from '../../../constants/palette';\n\ninterface Props {\n  width?: string;\n  color?: string;\n}\n\nconst Pencil: FC<Props> = ({ width = '24px', color = PALETTE.GRAY[400] }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={width}\n      height={width}\n      fill={color}\n    >\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n      <path d=\"M14.06 9.02l.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z\" />\n    </svg>\n  );\n};\n\nPencil.propTypes = {\n  width: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default Pencil;\n","import React, { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport PALETTE from '../../../constants/palette';\n\ninterface Props {\n  width?: string;\n  color?: string;\n}\n\nconst TrashBin: FC<Props> = ({ width = '24px', color = PALETTE.GRAY[400] }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      fill={color}\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 512 512\"\n    >\n      <g>\n        <g>\n          <path\n            d=\"M436,60h-90V45c0-24.813-20.187-45-45-45h-90c-24.813,0-45,20.187-45,45v15H76c-24.813,0-45,20.187-45,45v30\n\t\t\tc0,8.284,6.716,15,15,15h16.183L88.57,470.945c0.003,0.043,0.007,0.086,0.011,0.129C90.703,494.406,109.97,512,133.396,512\n\t\t\th245.207c23.427,0,42.693-17.594,44.815-40.926c0.004-0.043,0.008-0.086,0.011-0.129L449.817,150H466c8.284,0,15-6.716,15-15v-30\n\t\t\tC481,80.187,460.813,60,436,60z M196,45c0-8.271,6.729-15,15-15h90c8.271,0,15,6.729,15,15v15H196V45z M393.537,468.408\n\t\t\tc-0.729,7.753-7.142,13.592-14.934,13.592H133.396c-7.792,0-14.204-5.839-14.934-13.592L92.284,150h327.432L393.537,468.408z\n\t\t\t M451,120h-15H76H61v-15c0-8.271,6.729-15,15-15h105h150h105c8.271,0,15,6.729,15,15V120z\"\n          />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M256,180c-8.284,0-15,6.716-15,15v212c0,8.284,6.716,15,15,15s15-6.716,15-15V195C271,186.716,264.284,180,256,180z\" />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M346,180c-8.284,0-15,6.716-15,15v212c0,8.284,6.716,15,15,15s15-6.716,15-15V195C361,186.716,354.284,180,346,180z\" />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M166,180c-8.284,0-15,6.716-15,15v212c0,8.284,6.716,15,15,15s15-6.716,15-15V195C181,186.716,174.284,180,166,180z\" />\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nTrashBin.propTypes = {\n  width: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default TrashBin;\n","import styled from 'styled-components';\nimport PALETTE from '../../../constants/palette';\nimport Button from '../Button/Button';\nimport FlexContainer from '../FlexContainer/FlexContainer';\n\nexport const StyledListItem = styled.li`\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid ${PALETTE.GRAY[300]};\n  padding: 0.75rem 1rem;\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nexport const ListContent = styled(FlexContainer)`\n  flex-grow: 1;\n`;\n\nexport const ListItemButton = styled(Button)`\n  width: 2.25rem;\n  height: 2.25rem;\n  margin-left: 1rem;\n`;\n","import PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/store';\nimport Pencil from '../Icon/Pencil';\nimport TrashBin from '../Icon/TrashBin';\nimport { ListContent, ListItemButton, StyledListItem } from './ListItem.styles';\n\ninterface Props {\n  children: React.ReactNode;\n  onModify?: () => void;\n  onDelete?: () => void;\n}\n\n// TODO: 컴포넌트 이름 변경 고려하기\nconst ListItem: FC<Props> = ({ children, onModify, onDelete }) => {\n  const isLogin = useSelector((state: RootState) => state.login.isLogin);\n\n  return (\n    <StyledListItem>\n      <ListContent alignItems=\"center\">{children}</ListContent>\n      {isLogin && onModify && (\n        <ListItemButton type=\"button\" buttonType=\"round\" isColored={false} onClick={onModify}>\n          <Pencil width=\"70%\" />\n        </ListItemButton>\n      )}\n      {isLogin && onDelete && (\n        <ListItemButton type=\"button\" buttonType=\"round\" isColored={false} onClick={onDelete}>\n          <TrashBin width=\"70%\" />\n        </ListItemButton>\n      )}\n    </StyledListItem>\n  );\n};\n\nListItem.propTypes = {\n  children: PropTypes.node,\n  onModify: PropTypes.func,\n  onDelete: PropTypes.func,\n};\n\nexport default ListItem;\n","import styled from 'styled-components';\nimport PALETTE from '../../../constants/palette';\n\nexport const ButtonOnLineContainer = styled.div`\n  position: relative;\n  height: 3rem;\n\n  &::before {\n    content: '';\n    display: block;\n    width: 100%;\n    height: 2px;\n    background-color: ${PALETTE.GRAY[200]};\n    position: absolute;\n    top: 50%;\n  }\n\n  & > button {\n    height: 3rem;\n    width: 3rem;\n    position: absolute;\n    top: 0;\n    right: 3.5rem;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React, { ButtonHTMLAttributes, FC, MouseEventHandler } from 'react';\nimport Button from '../../@common/Button/Button';\nimport { ButtonOnLineContainer } from './ButtonOnLine.styles';\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  children: React.ReactNode;\n  onClick: MouseEventHandler<HTMLButtonElement>;\n}\n\nconst ButtonOnLine: FC<Props> = ({ children, onClick }) => {\n  return (\n    <ButtonOnLineContainer>\n      <Button onClick={onClick} buttonType=\"round\">\n        {children}\n      </Button>\n    </ButtonOnLineContainer>\n  );\n};\n\nButtonOnLine.propTypes = {\n  children: PropTypes.node,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ButtonOnLine;\n","import { SIGNUP } from './appInfo';\n\nexport const ERROR_MESSAGE = {\n  INVALID_EMAIL: '이메일 형식이 아닙니다.',\n  DUPLICATED_EMAIL: '이미 존재하는 이메일입니다.',\n  INVALID_RANGE_OF_AGE: `나이는 ${SIGNUP.MIN_AGE}이상, ${SIGNUP.MAX_AGE}이하의 값만 가능합니다`,\n  INVALID_RANGE_OF_PASSWORD: `비밀번호의 길이는 ${SIGNUP.PASSWORD_MIN_LENGTH}자 이상, ${SIGNUP.PASSWORD_MAX_LENGTH}자 이하여야 합니다.`,\n  INVALID_PASSWORD: `비밀번호는 공백 없이 영어와 숫자만으로 구성되어야 합니다.`,\n  INVALID_SIGNUP_INPUT: '유효하지 않은 입력값이 존재합니다. 입력값을 확인해주세요.',\n  PASSWORD_CONFIRM_FAILURE: '비밀번호와 동일하지 않습니다. 비밀번호를 확인해주세요.',\n  SIGNUP: '회원가입에 실패했습니다ㅠㅜ 이미 존재하는 이메일인지 확인해주세요.',\n\n  LOGIN_FAILURE: '가입하지 않은 아이디이거나, 잘못된 비밀번호입니다.',\n\n  INVALID_STATION_NAME: '역 이름은 공백 없는 2자 이상의 한글이나 숫자로 이루어져야합니다.',\n  DUPLICATED_STATION_NAME: '이미 존재하는 역이름 입니다.',\n\n  INVALID_LINE_NAME: '노선 이름은 공백 없는 2자 이상의 한글이나 숫자로 이루어져야합니다.',\n  DUPLICATED_SECTION: '상/하행선은 서로 같은 역으로 설정할 수 없습니다.',\n  NONE_OF_SELECTED_SECTION: '상행선과 하행선을 모두 선택해주세요.',\n  SHOULD_CONTAIN_ONE_STATION_IN_LINE: '구간 중 하나의 역만 노선에 등록되어있어야합니다.',\n  DELETE_SECTION_FAILURE: '해당 구간을 삭제할 수 없습니다.',\n  NOT_SELECTED_LINE: '노선을 선택해주세요.',\n\n  INCOMPLETE_FORM: '입력이 완료되지 않았습니다. 모든 값을 입력해주세요!',\n};\n\nexport const SUCCESS_MESSAGE = {\n  SIGNUP: '회원가입 성공! 환영합니다☺️',\n};\n\nexport const CONFIRM_MESSAGE = {\n  DELETE_LINE: '해당 노선을 삭제하시겠습니까?',\n  DELETE_SECTION: '해당 구간을 삭제하시겠습니까?',\n};\n","import { DependencyList, EffectCallback, useEffect, useRef } from 'react';\n\nconst useUpdateEffect = (\n  effect: EffectCallback,\n  dependencies?: DependencyList | undefined\n): void => {\n  const isFirstMount = useRef(true);\n\n  useEffect(() => {\n    if (!isFirstMount.current) effect();\n    else isFirstMount.current = false;\n  }, dependencies);\n};\n\nexport default useUpdateEffect;\n","export const isKoreanAndNumber = (value: string): boolean => !/[^가-힣|0-9]/.test(value);\n\nexport const isEnglishAndNumber = (value: string): boolean => !/[^a-zA-Z|0-9]/.test(value);\n\nexport const isEmail = (value: string): boolean =>\n  /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i.test(value);\n","import PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport PALETTE from '../../../constants/palette';\n\ninterface Props {\n  width?: string;\n  color?: string;\n}\n\nconst Close: FC<Props> = ({ width = '24px', color = PALETTE.GRAY[400] }) => {\n  return (\n    <svg width={width} stroke={color} strokeLinecap=\"round\" strokeWidth={4} viewBox=\"0 0 40 40\">\n      <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\n    </svg>\n  );\n};\n\nClose.propTypes = {\n  width: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default Close;\n","import styled from 'styled-components';\nimport { Z_INDEX } from '../../../constants/css';\nimport Button from '../Button/Button';\n\ninterface ModalContentProps {\n  hasTitle: boolean;\n}\n\nexport const ModalContainer = styled.div`\n  display: flex;\n  position: fixed;\n  z-index: ${Z_INDEX.MODAL};\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.3);\n`;\n\nexport const ModalInner = styled.div`\n  position: relative;\n  width: 700px;\n  max-height: 80vh;\n  border-radius: 10px;\n  margin: auto;\n  background: white;\n  padding: 2.5rem 2rem;\n`;\n\nexport const CloseButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  width: 2rem;\n  height: 2rem;\n`;\n\nexport const ModalTitle = styled.h2`\n  text-align: center;\n  margin-top: 1.5rem;\n`;\n\nexport const ModalContent = styled.div<ModalContentProps>`\n  max-height: calc(80vh - ${({ hasTitle }) => (hasTitle ? '10rem' : '6rem')});\n  margin-top: 1.5rem;\n  overflow-y: auto;\n`;\n","import PropTypes from 'prop-types';\nimport React, { FC, MouseEvent } from 'react';\nimport ReactDOM from 'react-dom';\nimport Close from '../Icon/Close';\nimport { CloseButton, ModalContainer, ModalContent, ModalInner, ModalTitle } from './Modal.styles';\n\nconst $modalRoot = document.getElementById('modal-root');\n\nexport interface Props {\n  children: React.ReactNode;\n  titleText?: string;\n  onClose: () => void;\n}\n\nconst Modal: FC<Props> = ({ children, titleText, onClose }) => {\n  const onClickDimmed = ({ target, currentTarget }: MouseEvent<HTMLDivElement>) => {\n    if (!onClose || target !== currentTarget) return;\n\n    onClose();\n  };\n\n  return ReactDOM.createPortal(\n    <ModalContainer onMouseDown={onClickDimmed}>\n      <ModalInner>\n        <CloseButton buttonType=\"round\" isColored={false} onClick={onClose}>\n          <Close width=\"90%\" />\n        </CloseButton>\n        {titleText && <ModalTitle>{titleText}</ModalTitle>}\n        <ModalContent hasTitle={!!titleText}>{children}</ModalContent>\n      </ModalInner>\n    </ModalContainer>,\n    $modalRoot as HTMLDivElement\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  titleText: PropTypes.string,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import styled from 'styled-components';\nimport PALETTE from '../../../constants/palette';\n\nexport const LabelText = styled.div``;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  border: 1px solid ${PALETTE.GRAY[500]};\n  border-radius: 3px;\n  padding: 0.5rem 0.75rem;\n  position: relative;\n  background-color: white;\n\n  ${LabelText} {\n    height: 0.8rem;\n    overflow-y: visible;\n    position: absolute;\n    background-color: inherit;\n    color: ${PALETTE.GRAY[500]};\n    font-size: 0.875rem;\n    top: -0.625rem;\n    left: 1rem;\n    padding: 0 0.75rem;\n  }\n\n  & > input {\n    min-height: 2rem;\n    border: none;\n    flex-grow: 1;\n    font-size: 1.125rem;\n\n    &:focus {\n      outline: none;\n    }\n\n    &:disabled {\n      background-color: transparent;\n    }\n  }\n`;\n\nexport const LabelIcon = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 0.75rem;\n`;\n","import PropTypes from 'prop-types';\nimport React, { FC, InputHTMLAttributes } from 'react';\nimport { LabelIcon, LabelText, StyledLabel } from './Input.styles';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  className?: string;\n  labelText?: string;\n  labelIcon?: React.ReactNode;\n}\n\nconst Input: FC<InputProps> = ({ className, labelText, labelIcon, ...option }) => {\n  return (\n    <StyledLabel className={className}>\n      {labelText && <LabelText>{labelText}</LabelText>}\n      {labelIcon && <LabelIcon>{labelIcon}</LabelIcon>}\n      <input {...option} />\n    </StyledLabel>\n  );\n};\n\nInput.propTypes = {\n  className: PropTypes.string,\n  labelText: PropTypes.string,\n  labelIcon: PropTypes.node,\n};\n\nexport default Input;\n","import styled from 'styled-components';\nimport PALETTE from '../../../constants/palette';\nimport FlexContainer from '../FlexContainer/FlexContainer';\n\ninterface NotificationTextProps {\n  isError: boolean;\n}\n\nexport const NotificationInputContainer = styled(FlexContainer)`\n  height: 5rem;\n`;\n\nexport const NotificationText = styled.p<NotificationTextProps>`\n  margin-left: 0.75rem;\n  color: ${({ isError }) => (isError ? PALETTE.RED[400] : PALETTE.GREEN[400])};\n\n  &::before {\n    content: ${({ isError }) => (isError ? '\"🚫 \"' : '\"✅ \"')};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport Input, { InputProps } from '../Input/Input';\nimport { NotificationInputContainer, NotificationText } from './NotificationInput.styles';\n\ninterface Message {\n  text: string;\n  isError: boolean;\n}\n\ninterface Props extends InputProps {\n  message?: Message;\n  className?: string;\n}\n\nconst NotificationInput: FC<Props> = ({ message, className, ...options }) => {\n  return (\n    <NotificationInputContainer\n      className={className}\n      direction=\"column\"\n      justifyContent=\"space-between\"\n    >\n      <Input {...options} />\n      {message?.text && (\n        <NotificationText isError={message.isError}>{message.text}</NotificationText>\n      )}\n    </NotificationInputContainer>\n  );\n};\n\nNotificationInput.propTypes = {\n  message: PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    isError: PropTypes.bool.isRequired,\n  }),\n  className: PropTypes.string,\n};\n\nexport default NotificationInput;\n","import PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport PALETTE from '../../../constants/palette';\n\ninterface Props {\n  width?: string;\n  color?: string;\n}\n\nconst Arrow: FC<Props> = ({ width = '24px', color = PALETTE.GRAY[400] }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={width}\n      height={width}\n      fill={color}\n    >\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n      <path d=\"M6.99 11L3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z\" />\n    </svg>\n  );\n};\n\nArrow.propTypes = {\n  width: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default Arrow;\n","import styled from 'styled-components';\nimport PALETTE from '../../../constants/palette';\n\nconst SelectBox = styled.select`\n  height: 3rem;\n  font-size: 1rem;\n  padding: 0 1rem;\n  border-color: ${PALETTE.GRAY[500]};\n  border-radius: 3px;\n`;\n\nexport default SelectBox;\n","import styled from 'styled-components';\nimport PALETTE from '../../../constants/palette';\nimport FlexContainer from '../../@common/FlexContainer/FlexContainer';\nimport SelectBox from '../../@common/SelectBox/SelectBox';\n\nexport const SectionSelectBoxContainer = styled(FlexContainer)`\n  height: 5rem;\n`;\n\nexport const StationSelectBox = styled(SelectBox)``;\n\nexport const StationsSelectContainer = styled(FlexContainer)`\n  width: 100%;\n\n  & > ${StationSelectBox} {\n    flex-grow: 1;\n  }\n\n  & > * {\n    margin-right: 1rem;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const SectionModalButtonContainer = styled(FlexContainer)`\n  & > * {\n    margin-right: 1rem;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const SectionSelectErrorMessage = styled.p`\n  margin-top: 0.25rem;\n  margin-left: 0.75rem;\n  color: ${PALETTE.RED[400]};\n\n  &::before {\n    content: '🚫 ';\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React, { ChangeEvent, FC } from 'react';\nimport { Station } from '../../../types';\nimport Arrow from '../../@common/Icon/Arrow';\nimport {\n  SectionSelectBoxContainer,\n  SectionSelectErrorMessage,\n  StationSelectBox,\n  StationsSelectContainer,\n} from './SectionSelectBox.styles';\n\nexport type OnChangeSectionSelectBoxHandler = (\n  type: 'upStationId' | 'downStationId'\n) => (event: ChangeEvent<HTMLSelectElement>) => void;\n\nexport interface Props {\n  onChange: OnChangeSectionSelectBoxHandler;\n  errorMessage?: string;\n  upStationOptions: Station[];\n  downStationOptions: Station[];\n}\n\nconst SectionSelectBox: FC<Props> = ({\n  onChange,\n  errorMessage,\n  upStationOptions,\n  downStationOptions,\n}) => {\n  return (\n    <SectionSelectBoxContainer direction=\"column\">\n      <StationsSelectContainer alignItems=\"center\" justifyContent=\"space-between\">\n        <StationSelectBox onChange={onChange('upStationId')}>\n          <option value=\"\">역을 선택하세요</option>\n          {upStationOptions.map((station) => (\n            <option key={station.id} value={station.id}>\n              {station.name}\n            </option>\n          ))}\n        </StationSelectBox>\n        <Arrow />\n        <StationSelectBox onChange={onChange('downStationId')}>\n          <option value=\"\">역을 선택하세요</option>\n          {downStationOptions.map((station) => (\n            <option key={station.id} value={station.id}>\n              {station.name}\n            </option>\n          ))}\n        </StationSelectBox>\n      </StationsSelectContainer>\n      {errorMessage && <SectionSelectErrorMessage>{errorMessage}</SectionSelectErrorMessage>}\n    </SectionSelectBoxContainer>\n  );\n};\n\nSectionSelectBox.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string,\n  upStationOptions: PropTypes.array.isRequired,\n  downStationOptions: PropTypes.array.isRequired,\n};\n\nexport default SectionSelectBox;\n","import styled from 'styled-components';\nimport PALETTE from '../../constants/palette';\nimport FlexContainer from '../@common/FlexContainer/FlexContainer';\n\nexport const LineForm = styled.form`\n  & > * {\n    margin: 2rem 1rem;\n  }\n`;\n\nexport const LineColorContainer = styled(FlexContainer)`\n  padding: 1rem;\n  border: 1px solid ${PALETTE.GRAY[500]};\n  border-radius: 3px;\n`;\n\nexport const LineModalButtonContainer = styled(FlexContainer)`\n  & > * {\n    margin-right: 1rem;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React, { ChangeEvent, FC, FormEvent, useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { LINE, LINE_COLORS, SECTION } from '../../constants/appInfo';\nimport { ERROR_MESSAGE } from '../../constants/message';\nimport useUpdateEffect from '../../hooks/useUpdateEffect/useUpdateEffect';\nimport { addLine } from '../../redux/lineSlice';\nimport { loadStations } from '../../redux/stationSlice';\nimport { RootState, useAppDispatch } from '../../redux/store';\nimport { isKoreanAndNumber } from '../../util/validator';\nimport Button from '../@common/Button/Button';\nimport ColorRadio from '../@common/ColorRadio/ColorRadio';\nimport Modal from '../@common/Modal/Modal';\nimport NotificationInput from '../@common/NotificationInput/NotificationInput';\nimport SectionSelectBox, {\n  OnChangeSectionSelectBoxHandler,\n} from '../@shared/SectionSelectBox/SectionSelectBox';\nimport { LineColorContainer, LineForm, LineModalButtonContainer } from './LinesModal.styles';\n\ninterface Props {\n  onClose: () => void;\n}\n\ninterface FormInput {\n  name: string;\n  upStationId: string;\n  downStationId: string;\n  distance: number;\n  color: string;\n}\n\ninterface ErrorMessage {\n  name: string;\n  section: string;\n  distance: string;\n}\n\nconst LineAddModal: FC<Props> = ({ onClose }) => {\n  const { stations } = useSelector((state: RootState) => state.station);\n  const { lines, errorMessage } = useSelector((state: RootState) => state.line);\n  const usedLineColors = useMemo(() => lines.map((line) => line.color), [lines]);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (errorMessage === '') {\n      return;\n    }\n\n    alert(errorMessage);\n  });\n\n  const [formInput, setFormInput] = useState<FormInput>({\n    name: '',\n    upStationId: '',\n    downStationId: '',\n    distance: SECTION.MIN_DISTANCE,\n    color: '',\n  });\n  const [validationErrorMessage, setValidationErrorMessage] = useState<ErrorMessage>({\n    name: '',\n    section: '',\n    distance: '',\n  });\n\n  useEffect(() => {\n    if (stations.length === 0) {\n      dispatch(loadStations());\n    }\n  }, []);\n\n  useUpdateEffect(() => {\n    if (formInput.upStationId === '' || formInput.downStationId === '') {\n      setValidationErrorMessage({\n        ...validationErrorMessage,\n        section: ERROR_MESSAGE.NONE_OF_SELECTED_SECTION,\n      });\n      return;\n    }\n\n    if (formInput.upStationId === formInput.downStationId) {\n      setValidationErrorMessage({\n        ...validationErrorMessage,\n        section: ERROR_MESSAGE.DUPLICATED_SECTION,\n      });\n      return;\n    }\n\n    setValidationErrorMessage({\n      ...validationErrorMessage,\n      section: '',\n    });\n  }, [formInput.upStationId, formInput.downStationId]);\n\n  const onChangeName = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    if (value.length >= 2 && isKoreanAndNumber(value)) {\n      setValidationErrorMessage({\n        ...validationErrorMessage,\n        name: '',\n      });\n    } else {\n      setValidationErrorMessage({\n        ...validationErrorMessage,\n        name: ERROR_MESSAGE.INVALID_LINE_NAME,\n      });\n    }\n\n    setFormInput({\n      ...formInput,\n      name: value,\n    });\n  };\n\n  // TODO: 리팩터링 생각해보기\n  const onChangeStations: OnChangeSectionSelectBoxHandler = (type) => ({ target: { value } }) => {\n    setFormInput({\n      ...formInput,\n      [type]: value,\n    });\n  };\n\n  const onChangeDistance = ({ target: { valueAsNumber } }: ChangeEvent<HTMLInputElement>) => {\n    setFormInput({\n      ...formInput,\n      distance: valueAsNumber,\n    });\n  };\n\n  const isUsedLineColor = (color: string): boolean => usedLineColors.includes(color);\n\n  const onChangeLineColor = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    setFormInput({ ...formInput, color: value });\n  };\n\n  const onAddLine = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (\n      Object.values(validationErrorMessage).some((message) => message !== '') ||\n      Object.values(formInput).some((value) => !value)\n    ) {\n      alert(ERROR_MESSAGE.INCOMPLETE_FORM);\n\n      return;\n    }\n\n    dispatch(\n      addLine({\n        ...formInput,\n        upStationId: Number(formInput.upStationId),\n        downStationId: Number(formInput.downStationId),\n      })\n    );\n\n    onClose();\n  };\n\n  return (\n    <Modal titleText={LINE.ADD_MODAL_TITLE} onClose={onClose}>\n      <LineForm onSubmit={onAddLine}>\n        <NotificationInput\n          onChange={onChangeName}\n          value={formInput.name}\n          message={{ text: validationErrorMessage.name, isError: true }}\n          minLength={2}\n          maxLength={10}\n          labelText={LINE.NAME_LABEL_TEXT}\n          placeholder={LINE.NAME_PLACEHOLDER}\n          required\n        />\n        <SectionSelectBox\n          onChange={onChangeStations}\n          upStationOptions={stations}\n          downStationOptions={stations}\n          errorMessage={validationErrorMessage.section}\n        />\n        <NotificationInput\n          value={formInput.distance}\n          onChange={onChangeDistance}\n          type=\"number\"\n          min={SECTION.MIN_DISTANCE}\n          labelText={LINE.DISTANCE_LABEL_TEXT}\n          required\n        />\n        <LineColorContainer justifyContent=\"space-between\" alignItems=\"center\">\n          <span>{LINE.COLOR_LABEL_TEXT}</span>\n          {LINE_COLORS.map((color) => (\n            <ColorRadio\n              key={color}\n              value={color}\n              checked={color === formInput.color}\n              radioColor={color}\n              groupName={LINE.COLOR_SELECT_NAME}\n              disabled={isUsedLineColor(color)}\n              onChange={onChangeLineColor}\n              required\n            />\n          ))}\n        </LineColorContainer>\n        <LineModalButtonContainer justifyContent=\"flex-end\">\n          <Button type=\"button\" isColored={false} onClick={onClose}>\n            취소\n          </Button>\n          <Button>확인</Button>\n        </LineModalButtonContainer>\n      </LineForm>\n    </Modal>\n  );\n};\n\nLineAddModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default LineAddModal;\n","import PropTypes from 'prop-types';\nimport React, { ChangeEvent, FC, FormEvent, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { LINE, LINE_COLORS } from '../../constants/appInfo';\nimport { ERROR_MESSAGE } from '../../constants/message';\nimport { modifyLine } from '../../redux/lineSlice';\nimport { RootState, useAppDispatch } from '../../redux/store';\nimport { isKoreanAndNumber } from '../../util/validator';\nimport Button from '../@common/Button/Button';\nimport ColorRadio from '../@common/ColorRadio/ColorRadio';\nimport Modal from '../@common/Modal/Modal';\nimport NotificationInput from '../@common/NotificationInput/NotificationInput';\nimport { LineColorContainer, LineForm, LineModalButtonContainer } from './LinesModal.styles';\n\nexport interface ModifyLine {\n  id: number;\n  name: string;\n  color: string;\n}\n\ninterface Props {\n  line: ModifyLine;\n  onClose: () => void;\n}\n\ninterface FormValue {\n  name: string;\n  color: string;\n}\n\nconst LineModifyModal: FC<Props> = ({ line, onClose }) => {\n  const { lines } = useSelector((state: RootState) => state.line);\n  const dispatch = useAppDispatch();\n\n  const [formInput, setFormInput] = useState<FormValue>({\n    name: line.name,\n    color: line.color,\n  });\n  const [validationErrorMessage, setValidationErrorMessage] = useState<string>('');\n  const usedLineColor = useMemo(\n    () => lines.filter((ele) => ele.id !== line.id).map((ele) => ele.color),\n    [lines]\n  );\n\n  const onChangeName = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    if (value.length >= 2 && isKoreanAndNumber(value)) {\n      setValidationErrorMessage('');\n    } else {\n      setValidationErrorMessage(ERROR_MESSAGE.INVALID_LINE_NAME);\n    }\n\n    setFormInput({\n      ...formInput,\n      name: value,\n    });\n  };\n\n  const isUsedLineColor = (color: string) => usedLineColor.includes(color);\n\n  const onChangeLineColor = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    setFormInput({ ...formInput, color: value });\n  };\n\n  const onModifyLine = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (\n      Object.values(validationErrorMessage).some((message) => message !== '') ||\n      Object.values(formInput).some((value) => !value)\n    ) {\n      alert(ERROR_MESSAGE.INCOMPLETE_FORM);\n\n      return;\n    }\n\n    dispatch(\n      modifyLine({\n        lineId: line.id,\n        ...formInput,\n      })\n    );\n\n    onClose();\n  };\n\n  return (\n    <Modal titleText={LINE.MODIFY_MODAL_TITLE} onClose={onClose}>\n      <LineForm onSubmit={onModifyLine}>\n        <NotificationInput\n          onChange={onChangeName}\n          value={formInput.name}\n          message={{ text: validationErrorMessage, isError: true }}\n          minLength={2}\n          maxLength={10}\n          labelText={LINE.NAME_LABEL_TEXT}\n          placeholder={LINE.NAME_PLACEHOLDER}\n        />\n        <LineColorContainer justifyContent=\"space-between\" alignItems=\"center\">\n          <span>{LINE.COLOR_LABEL_TEXT}</span>\n          {LINE_COLORS.map((color) => (\n            <ColorRadio\n              key={color}\n              value={color}\n              checked={color === formInput.color}\n              radioColor={color}\n              groupName={LINE.COLOR_SELECT_NAME}\n              disabled={isUsedLineColor(color)}\n              onChange={onChangeLineColor}\n            />\n          ))}\n        </LineColorContainer>\n        <LineModalButtonContainer justifyContent=\"flex-end\">\n          <Button type=\"button\" isColored={false} onClick={onClose}>\n            취소\n          </Button>\n          <Button>확인</Button>\n        </LineModalButtonContainer>\n      </LineForm>\n    </Modal>\n  );\n};\n\nLineModifyModal.propTypes = {\n  line: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n  }).isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default LineModifyModal;\n","import { useState } from 'react';\n\ninterface UseModal {\n  isModalOpen: boolean;\n  modalData: unknown;\n  openModal: () => void;\n  closeModal: () => void;\n  passDataToModal: (data: unknown) => void;\n}\n\nconst useModal = (initModalData?: unknown): UseModal => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalData, setModalData] = useState(initModalData);\n\n  const passDataToModal = (modalData: unknown) => {\n    setModalData(modalData);\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return { isModalOpen, modalData, openModal, closeModal, passDataToModal };\n};\n\nexport default useModal;\n","import styled from 'styled-components';\n\ninterface LineColorDotProps {\n  dotColor: string;\n}\n\nexport const LineList = styled.ul`\n  margin: 2.5rem 3.5rem;\n`;\n\nexport const LineColorDot = styled.span<LineColorDotProps>`\n  display: inline-block;\n  width: 1rem;\n  height: 1rem;\n  border-radius: 50%;\n  background-color: ${({ dotColor }) => dotColor};\n  margin-right: 1rem;\n`;\n","import React, { FC, MouseEventHandler, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport CardTemplate from '../../components/@common/CardTemplate/CardTemplate';\nimport Add from '../../components/@common/Icon/Add';\nimport ListItem from '../../components/@common/ListItem/ListItem';\nimport ButtonOnLine from '../../components/@shared/ButtonOnLine/ButtonOnLine';\nimport LineAddModal from '../../components/LinesModal/LineAddModal';\nimport LineModifyModal, { ModifyLine } from '../../components/LinesModal/LineModifyModal';\nimport { API_INFO } from '../../constants/api';\nimport { PAGE_INFO } from '../../constants/appInfo';\nimport { CONFIRM_MESSAGE } from '../../constants/message';\nimport PALETTE from '../../constants/palette';\nimport useModal from '../../hooks/useModal/useModal';\nimport useUpdateEffect from '../../hooks/useUpdateEffect/useUpdateEffect';\nimport { deleteLine, loadLines } from '../../redux/lineSlice';\nimport { RootState, useAppDispatch } from '../../redux/store';\nimport { LineColorDot, LineList } from './Lines.styles';\n\nconst Lines: FC = () => {\n  const apiOwner = useSelector((state: RootState) => state.api.owner);\n  const isLogin = useSelector((state: RootState) => state.login.isLogin);\n  const { lines, errorMessage } = useSelector((state: RootState) => state.line);\n  const dispatch = useAppDispatch();\n  const lineAddModal = useModal();\n  const lineModifyModal = useModal(null);\n\n  useEffect(() => {\n    dispatch(loadLines());\n  }, []);\n\n  useUpdateEffect(() => {\n    if (errorMessage === '') {\n      return;\n    }\n\n    alert(errorMessage);\n  }, [errorMessage]);\n\n  const onOpenAddModal: MouseEventHandler<HTMLButtonElement> = () => {\n    lineAddModal.openModal();\n  };\n\n  const onOpenModifyModal = (lineId: number) => () => {\n    const selectedLine = lines.find((line) => line.id === lineId) as ModifyLine;\n\n    lineModifyModal.passDataToModal({\n      id: selectedLine.id,\n      name: selectedLine.name,\n      color: selectedLine.color,\n    });\n    lineModifyModal.openModal();\n  };\n\n  const onDeleteLine = (lineId: number) => () => {\n    if (confirm(CONFIRM_MESSAGE.DELETE_LINE)) {\n      dispatch(deleteLine(lineId));\n    }\n  };\n\n  return (\n    <CardTemplate\n      titleText={PAGE_INFO.LINES.text}\n      templateColor={API_INFO[apiOwner].themeColor[400]}\n    >\n      {isLogin && (\n        <ButtonOnLine onClick={onOpenAddModal}>\n          <Add width=\"80%\" color={PALETTE.GRAY[600]} />\n        </ButtonOnLine>\n      )}\n      {lines && (\n        <LineList>\n          {lines.map((line) => (\n            <ListItem\n              key={line.id}\n              onDelete={onDeleteLine(line.id)}\n              onModify={onOpenModifyModal(line.id)}\n            >\n              <LineColorDot dotColor={line.color} />\n              {line.name}\n            </ListItem>\n          ))}\n        </LineList>\n      )}\n      {lineAddModal.isModalOpen && <LineAddModal onClose={lineAddModal.closeModal} />}\n      {lineModifyModal.isModalOpen && (\n        <LineModifyModal\n          line={lineModifyModal.modalData as ModifyLine}\n          onClose={lineModifyModal.closeModal}\n        />\n      )}\n    </CardTemplate>\n  );\n};\n\nexport default Lines;\n","import { Member } from './../types';\nimport axios, { AxiosResponse } from 'axios';\n\nexport const requestSignup = (memberInfo: Member): Promise<Response> =>\n  axios.post(`/members`, memberInfo);\n\ninterface LoginResponse {\n  accessToken: string;\n}\n\nexport const requestLogin = (loginInfo: Member): Promise<AxiosResponse<LoginResponse>> =>\n  axios.post(`/login/token`, loginInfo);\n","import PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport PALETTE from '../../../constants/palette';\n\ninterface Props {\n  width?: string;\n  color?: string;\n}\n\nconst Email: FC<Props> = ({ width = '24px', color = PALETTE.GRAY[400] }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={width}\n      height={width}\n      fill={color}\n    >\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n      <path d=\"M22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6zm-2 0l-8 5-8-5h16zm0 12H4V8l8 5 8-5v10z\" />\n    </svg>\n  );\n};\n\nEmail.propTypes = {\n  width: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default Email;\n","import PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport PALETTE from '../../../constants/palette';\n\ninterface Props {\n  width?: string;\n  color?: string;\n}\n\nconst Lock: FC<Props> = ({ width = '24px', color = PALETTE.GRAY[400] }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={width}\n      height={width}\n      fill={color}\n    >\n      <g fill=\"none\">\n        <path d=\"M0 0h24v24H0V0z\" />\n        <path d=\"M0 0h24v24H0V0z\" opacity=\".87\" />\n      </g>\n      <path d=\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\" />\n    </svg>\n  );\n};\n\nLock.propTypes = {\n  width: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default Lock;\n","import styled from 'styled-components';\nimport Button from '../../components/@common/Button/Button';\nimport PALETTE from '../../constants/palette';\nimport { Link } from 'react-router-dom';\n\nexport const LoginContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 1.5rem 2.5rem 3rem;\n`;\n\nexport const LoginForm = styled.form`\n  width: 100%;\n\n  label {\n    margin-bottom: 2rem;\n  }\n`;\n\nexport const LoginErrorMessage = styled.p`\n  margin-bottom: 0.5rem;\n  margin-left: 0.5rem;\n  color: ${PALETTE.RED[400]};\n`;\n\nexport const LoginButton = styled(Button)`\n  width: 100%;\n  margin-bottom: 1.5rem;\n`;\n\nexport const SignupLink = styled(Link)`\n  color: ${PALETTE.GRAY[400]};\n`;\n","import React, { FC, FormEvent, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { requestLogin } from '../../api/member';\nimport CardTemplate from '../../components/@common/CardTemplate/CardTemplate';\nimport Email from '../../components/@common/Icon/Email';\nimport Lock from '../../components/@common/Icon/Lock';\nimport Input from '../../components/@common/Input/Input';\nimport { API_INFO } from '../../constants/api';\nimport { PAGE_INFO } from '../../constants/appInfo';\nimport { ERROR_MESSAGE } from '../../constants/message';\nimport { login } from '../../redux/loginSlice';\nimport { RootState, useAppDispatch } from '../../redux/store';\nimport {\n  LoginButton,\n  LoginContainer,\n  LoginErrorMessage,\n  LoginForm,\n  SignupLink,\n} from './Login.styles';\n\ninterface LoginFormTarget extends EventTarget {\n  email: HTMLInputElement;\n  password: HTMLInputElement;\n}\n\nconst Login: FC = () => {\n  const apiOwner = useSelector((state: RootState) => state.api.owner);\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const onLogin = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const loginInfo = {\n      email: (event.target as LoginFormTarget).email.value,\n      password: (event.target as LoginFormTarget).password.value,\n    };\n\n    try {\n      const response = await requestLogin(loginInfo);\n      dispatch(login(response.data.accessToken));\n\n      history.push(PAGE_INFO.STATIONS.path);\n    } catch (error) {\n      setErrorMessage(ERROR_MESSAGE.LOGIN_FAILURE);\n    }\n  };\n\n  return (\n    <CardTemplate\n      templateColor={API_INFO[apiOwner].themeColor[400]}\n      titleText={PAGE_INFO.LOGIN.text}\n    >\n      <LoginContainer>\n        <LoginForm onSubmit={onLogin}>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            labelIcon={<Email />}\n            placeholder=\"이메일을 입력해주세요.\"\n          />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            labelIcon={<Lock />}\n            placeholder=\"비밀번호를 입력해주세요.\"\n          />\n          {errorMessage && <LoginErrorMessage>{errorMessage}</LoginErrorMessage>}\n          <LoginButton isColored={true}>로그인</LoginButton>\n        </LoginForm>\n        <SignupLink to={PAGE_INFO.SIGN_UP.path}>아직 회원이 아니신가요?</SignupLink>\n      </LoginContainer>\n    </CardTemplate>\n  );\n};\n\nexport default Login;\n","import styled from 'styled-components';\nimport FlexContainer from '../@common/FlexContainer/FlexContainer';\nimport SelectBox from '../@common/SelectBox/SelectBox';\n\nexport const SectionForm = styled.form`\n  & > * {\n    margin: 2rem 1rem;\n  }\n`;\n\nexport const StationSelectBox = styled(SelectBox)``;\n\nexport const StationContainer = styled(FlexContainer)`\n  ${StationSelectBox} {\n    flex-grow: 1;\n  }\n\n  & > * {\n    margin-right: 1rem;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const SectionModalButtonContainer = styled(FlexContainer)`\n  & > * {\n    margin-right: 1rem;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React, { ChangeEvent, FC, FormEvent, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { requestAddSection } from '../../api/lines';\nimport { SECTION } from '../../constants/appInfo';\nimport { ERROR_MESSAGE } from '../../constants/message';\nimport useUpdateEffect from '../../hooks/useUpdateEffect/useUpdateEffect';\nimport { loadLines } from '../../redux/lineSlice';\nimport { RootState, useAppDispatch } from '../../redux/store';\nimport { Line } from '../../types';\nimport Button from '../@common/Button/Button';\nimport Input from '../@common/Input/Input';\nimport Modal from '../@common/Modal/Modal';\nimport SectionSelectBox, {\n  OnChangeSectionSelectBoxHandler,\n} from '../@shared/SectionSelectBox/SectionSelectBox';\nimport { SectionForm, SectionModalButtonContainer } from './SectionsModal.styles';\n\ninterface Props {\n  onClose: () => void;\n  line: Line;\n}\n\nconst SectionAddModal: FC<Props> = ({ onClose, line }) => {\n  const { stations } = useSelector((state: RootState) => state.station);\n  const dispatch = useAppDispatch();\n\n  const [formInput, setFormInput] = useState({\n    upStationId: '',\n    downStationId: '',\n    distance: SECTION.MIN_DISTANCE,\n  });\n  const [validationErrorMessage, setValidationErrorMessage] = useState({\n    section: '',\n  });\n\n  const isStationInLine = (targetId: number) => {\n    return line.stations.find((station) => station.id === targetId) ? true : false;\n  };\n\n  useUpdateEffect(() => {\n    let numberOfStationAddedInLine = 0;\n\n    if (isStationInLine(Number(formInput.upStationId))) {\n      numberOfStationAddedInLine++;\n    }\n\n    if (isStationInLine(Number(formInput.downStationId))) {\n      numberOfStationAddedInLine++;\n    }\n\n    if (numberOfStationAddedInLine !== 1) {\n      setValidationErrorMessage({\n        section: ERROR_MESSAGE.SHOULD_CONTAIN_ONE_STATION_IN_LINE,\n      });\n      return;\n    }\n\n    if (formInput.upStationId === '' || formInput.downStationId === '') {\n      setValidationErrorMessage({\n        ...validationErrorMessage,\n        section: ERROR_MESSAGE.NONE_OF_SELECTED_SECTION,\n      });\n      return;\n    }\n\n    setValidationErrorMessage({\n      section: '',\n    });\n  }, [formInput.upStationId, formInput.downStationId]);\n\n  const onChangeStations: OnChangeSectionSelectBoxHandler = (type) => ({ target: { value } }) => {\n    setFormInput({\n      ...formInput,\n      [type]: value,\n    });\n  };\n\n  const onChangeDistance = ({ target: { valueAsNumber } }: ChangeEvent<HTMLInputElement>) => {\n    setFormInput({\n      ...formInput,\n      distance: valueAsNumber,\n    });\n  };\n\n  const onAddSection = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    try {\n      await requestAddSection({\n        lineId: line.id,\n        upStationId: Number(formInput.upStationId),\n        downStationId: Number(formInput.downStationId),\n        distance: Number(formInput.distance),\n      });\n\n      dispatch(loadLines());\n\n      onClose();\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  return (\n    <Modal titleText={SECTION.ADD_MODAL_TITLE} onClose={onClose}>\n      <SectionForm onSubmit={onAddSection}>\n        <Input labelText=\"노선선택\" value={line.name} disabled={true} />\n        <SectionSelectBox\n          onChange={onChangeStations}\n          upStationOptions={stations}\n          downStationOptions={stations}\n          errorMessage={validationErrorMessage.section}\n        />\n        <Input\n          value={formInput.distance}\n          onChange={onChangeDistance}\n          type=\"number\"\n          min={SECTION.MIN_DISTANCE}\n          labelText={SECTION.DISTANCE_LABEL_TEXT}\n        />\n        <SectionModalButtonContainer justifyContent=\"flex-end\">\n          <Button type=\"button\" isColored={false}>\n            취소\n          </Button>\n          <Button>확인</Button>\n        </SectionModalButtonContainer>\n      </SectionForm>\n    </Modal>\n  );\n};\n\nSectionAddModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  line: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    stations: PropTypes.array.isRequired,\n    sections: PropTypes.array.isRequired,\n  }).isRequired,\n};\n\nexport default SectionAddModal;\n","import styled from 'styled-components';\nimport NotificationInput from '../../components/@common/NotificationInput/NotificationInput';\n\nexport const StationNameInput = styled(NotificationInput)``;\n\nexport const StationForm = styled.form`\n  display: flex;\n  justify-content: space-between;\n  padding: 0 2.5rem;\n\n  ${StationNameInput} {\n    flex-grow: 1;\n    margin-right: 1.5rem;\n  }\n\n  button {\n    height: 3.125rem;\n  }\n`;\n\nexport const StationName = styled.p`\n  margin-left: 1rem;\n`;\n\nexport const StationList = styled.ul`\n  margin: 2rem 3.5rem;\n`;\n","import styled from 'styled-components';\nimport SelectBox from '../../components/@common/SelectBox/SelectBox';\n\nexport const LineSelectBox = styled(SelectBox)`\n  width: 100%;\n  margin: 1rem 2.5rem 2rem;\n`;\n\nexport const LineInfoContainer = styled.div`\n  margin: 2.5rem 3.5rem;\n`;\n","import React, { ChangeEvent, FC, useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { requestDeleteSection } from '../../api/lines';\nimport CardTemplate from '../../components/@common/CardTemplate/CardTemplate';\nimport FlexContainer from '../../components/@common/FlexContainer/FlexContainer';\nimport Add from '../../components/@common/Icon/Add';\nimport Subway from '../../components/@common/Icon/Subway';\nimport ListItem from '../../components/@common/ListItem/ListItem';\nimport ButtonOnLine from '../../components/@shared/ButtonOnLine/ButtonOnLine';\nimport SectionAddModal from '../../components/SectionsModal/SectionAddModal';\nimport { API_INFO } from '../../constants/api';\nimport { PAGE_INFO, SECTION } from '../../constants/appInfo';\nimport { CONFIRM_MESSAGE, ERROR_MESSAGE } from '../../constants/message';\nimport PALETTE from '../../constants/palette';\nimport useModal from '../../hooks/useModal/useModal';\nimport useUpdateEffect from '../../hooks/useUpdateEffect/useUpdateEffect';\nimport { loadLines } from '../../redux/lineSlice';\nimport { loadStations } from '../../redux/stationSlice';\nimport { RootState, useAppDispatch } from '../../redux/store';\nimport { Line } from '../../types';\nimport { StationName } from '../Stations/Stations.styles';\nimport { LineInfoContainer, LineSelectBox } from './Section.styles';\n\nconst Sections: FC = () => {\n  const apiOwner = useSelector((state: RootState) => state.api.owner);\n  const isLogin = useSelector((state: RootState) => state.login.isLogin);\n  const { stations, errorMessage: stationErrorMessage } = useSelector(\n    (state: RootState) => state.station\n  );\n  const { lines, errorMessage: lineErrorMessage } = useSelector((state: RootState) => state.line);\n  const dispatch = useAppDispatch();\n\n  const sectionAddModal = useModal();\n\n  const [targetLineId, setTargetLineId] = useState('');\n  const targetLine = useMemo(() => {\n    const id = Number(targetLineId);\n    return lines.find((line) => line.id === id);\n  }, [targetLineId, lines]);\n\n  useEffect(() => {\n    if (lines.length === 0) {\n      dispatch(loadLines());\n    }\n\n    if (stations.length === 0) {\n      dispatch(loadStations());\n    }\n  }, []);\n\n  useUpdateEffect(() => {\n    if (stationErrorMessage !== '') {\n      alert(stationErrorMessage);\n\n      return;\n    }\n\n    if (lineErrorMessage !== '') {\n      alert(lineErrorMessage);\n    }\n  }, [stationErrorMessage, lineErrorMessage]);\n\n  const onChangeTargetLine = ({ target: { value } }: ChangeEvent<HTMLSelectElement>): void => {\n    setTargetLineId(value);\n  };\n\n  const onOpenSectionAddModal = () => {\n    if (!targetLine) {\n      alert(ERROR_MESSAGE.NOT_SELECTED_LINE);\n\n      return;\n    }\n\n    sectionAddModal.openModal();\n  };\n\n  const onDeleteSection = (stationId: number) => async () => {\n    if (!confirm(CONFIRM_MESSAGE.DELETE_SECTION)) {\n      return;\n    }\n\n    try {\n      await requestDeleteSection({\n        lineId: Number(targetLineId),\n        stationId,\n      });\n\n      // TODO: 일관성있게 삭제 진행하기\n      dispatch(loadLines());\n    } catch (error) {\n      alert(ERROR_MESSAGE.DELETE_SECTION_FAILURE);\n    }\n  };\n\n  return (\n    <CardTemplate\n      titleText={PAGE_INFO.SECTIONS.text}\n      templateColor={API_INFO[apiOwner].themeColor[400]}\n    >\n      <FlexContainer>\n        <LineSelectBox onChange={onChangeTargetLine}>\n          <option value=\"\">{SECTION.LINE_SELECT_TEXT}</option>\n          {lines.map((line) => (\n            <option key={line.id} value={line.id}>\n              {line.name}\n            </option>\n          ))}\n        </LineSelectBox>\n      </FlexContainer>\n      {isLogin && (\n        <ButtonOnLine onClick={onOpenSectionAddModal}>\n          <Add width=\"80%\" color={PALETTE.GRAY[600]} />\n        </ButtonOnLine>\n      )}\n      <LineInfoContainer>\n        {targetLine && (\n          <CardTemplate\n            isColoredTitle={true}\n            titleSize=\"sm\"\n            titleText={targetLine.name}\n            templateColor={targetLine.color}\n          >\n            <ul>\n              {targetLine.stations.map((station) => (\n                <ListItem key={station.id} onDelete={onDeleteSection(station.id)}>\n                  <Subway />\n                  <StationName>{station.name}</StationName>\n                </ListItem>\n              ))}\n            </ul>\n          </CardTemplate>\n        )}\n      </LineInfoContainer>\n      {sectionAddModal.isModalOpen && (\n        <SectionAddModal line={targetLine as Line} onClose={sectionAddModal.closeModal} />\n      )}\n    </CardTemplate>\n  );\n};\n\nexport default Sections;\n","import PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport PALETTE from '../../../constants/palette';\n\ninterface Props {\n  width?: string;\n  color?: string;\n}\n\nconst Person: FC<Props> = ({ width = '24px', color = PALETTE.GRAY[400] }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={width}\n      height={width}\n      fill={color}\n    >\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n      <path d=\"M12 5.9c1.16 0 2.1.94 2.1 2.1s-.94 2.1-2.1 2.1S9.9 9.16 9.9 8s.94-2.1 2.1-2.1m0 9c2.97 0 6.1 1.46 6.1 2.1v1.1H5.9V17c0-.64 3.13-2.1 6.1-2.1M12 4C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\" />\n    </svg>\n  );\n};\n\nPerson.propTypes = {\n  width: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default Person;\n","import styled from 'styled-components';\nimport Button from '../../components/@common/Button/Button';\nimport NotificationInput from '../../components/@common/NotificationInput/NotificationInput';\n\nexport const SignupNotificationInput = styled(NotificationInput)`\n  margin-bottom: 1rem;\n`;\n\nexport const SignupForm = styled.form`\n  padding: 1.5rem 2.5rem 3rem;\n`;\n\nexport const SignupButton = styled(Button)`\n  width: 100%;\n`;\n","import React, { ChangeEvent, FC, FormEvent, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { requestSignup } from '../../api/member';\nimport CardTemplate from '../../components/@common/CardTemplate/CardTemplate';\nimport Email from '../../components/@common/Icon/Email';\nimport Lock from '../../components/@common/Icon/Lock';\nimport Person from '../../components/@common/Icon/Person';\nimport { API_INFO } from '../../constants/api';\nimport { PAGE_INFO, SIGNUP } from '../../constants/appInfo';\nimport { ERROR_MESSAGE, SUCCESS_MESSAGE } from '../../constants/message';\nimport { RootState } from '../../redux/store';\nimport { isEmail, isEnglishAndNumber } from '../../util/validator';\nimport { SignupButton, SignupForm, SignupNotificationInput } from './Signup.styles';\n\nconst Signup: FC = () => {\n  const apiOwner = useSelector((state: RootState) => state.api.owner);\n  //TODO: formInput으로 통일하기\n  const [formInput, setFormInput] = useState({\n    email: '',\n    age: '',\n    password: '',\n    passwordConfirm: '',\n  });\n  const [errorMessage, setErrorMessage] = useState({\n    email: '',\n    age: '',\n    password: '',\n    passwordConfirm: '',\n  });\n  const [isReadyToSubmit, setIsReadyToSubmit] = useState(false);\n  const history = useHistory();\n\n  const onChangeEmail = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    setFormInput({ ...formInput, email: value });\n\n    if (!isEmail(value)) {\n      setErrorMessage({ ...errorMessage, email: ERROR_MESSAGE.INVALID_EMAIL });\n\n      return;\n    }\n\n    // TODO: 이메일 중복 확인\n\n    setErrorMessage({ ...errorMessage, email: '' });\n  };\n\n  const onChangeAge = ({ target: { valueAsNumber } }: ChangeEvent<HTMLInputElement>) => {\n    setFormInput({\n      ...formInput,\n      age: String(valueAsNumber),\n    });\n\n    if (valueAsNumber < SIGNUP.MIN_AGE || SIGNUP.MAX_AGE < valueAsNumber) {\n      setErrorMessage({\n        ...errorMessage,\n        age: ERROR_MESSAGE.INVALID_RANGE_OF_AGE,\n      });\n\n      return;\n    }\n\n    setErrorMessage({\n      ...errorMessage,\n      age: '',\n    });\n  };\n\n  const onChangePassword = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    setFormInput({\n      ...formInput,\n      password: value,\n    });\n    setErrorMessage({\n      ...errorMessage,\n      password: '',\n    });\n\n    if (value.length < SIGNUP.PASSWORD_MIN_LENGTH || SIGNUP.PASSWORD_MAX_LENGTH < value.length) {\n      setErrorMessage({\n        ...errorMessage,\n        password: ERROR_MESSAGE.INVALID_RANGE_OF_PASSWORD,\n      });\n      return;\n    }\n\n    if (!isEnglishAndNumber(value)) {\n      setErrorMessage({\n        ...errorMessage,\n        password: ERROR_MESSAGE.INVALID_PASSWORD,\n      });\n    }\n  };\n\n  const onChangePasswordConfirm = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    setFormInput({\n      ...formInput,\n      passwordConfirm: value,\n    });\n  };\n\n  useEffect(() => {\n    if (formInput.password !== formInput.passwordConfirm) {\n      setErrorMessage({ ...errorMessage, passwordConfirm: ERROR_MESSAGE.PASSWORD_CONFIRM_FAILURE });\n\n      return;\n    }\n\n    setErrorMessage({\n      ...errorMessage,\n      passwordConfirm: '',\n    });\n  }, [formInput.password, formInput.passwordConfirm]);\n\n  useEffect(() => {\n    if (\n      Object.values(formInput).every((input) => input !== '') &&\n      Object.values(errorMessage).every((errorMessage) => errorMessage === '')\n    ) {\n      setIsReadyToSubmit(true);\n    }\n  }, [formInput, errorMessage]);\n\n  const onSignup = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (Object.values(errorMessage).some((errorMessage) => errorMessage !== '')) {\n      alert(ERROR_MESSAGE.INVALID_SIGNUP_INPUT);\n\n      return;\n    }\n\n    // TODO : input태그 name vs id\n    const memberInfo = {\n      email: formInput.email,\n      age: Number(formInput.age),\n      password: formInput.password,\n    };\n\n    try {\n      await requestSignup(memberInfo);\n\n      alert(SUCCESS_MESSAGE.SIGNUP);\n\n      history.push(PAGE_INFO.LOGIN.path);\n    } catch (error) {\n      alert(ERROR_MESSAGE.SIGNUP);\n    }\n  };\n\n  return (\n    <CardTemplate\n      templateColor={API_INFO[apiOwner].themeColor[400]}\n      titleText={PAGE_INFO.SIGN_UP.text}\n    >\n      <SignupForm onSubmit={onSignup}>\n        <SignupNotificationInput\n          type=\"email\"\n          value={formInput.email}\n          onChange={onChangeEmail}\n          labelIcon={<Email />}\n          placeholder=\"이메일을 입력해주세요.\"\n          message={{ text: errorMessage.email, isError: true }}\n          required\n        />\n        <SignupNotificationInput\n          type=\"number\"\n          value={formInput.age}\n          onChange={onChangeAge}\n          labelIcon={<Person />}\n          placeholder=\"나이를 입력해주세요.\"\n          min={SIGNUP.MIN_AGE}\n          max={SIGNUP.MAX_AGE}\n          message={{ text: errorMessage.age, isError: true }}\n          required\n        />\n        <SignupNotificationInput\n          type=\"password\"\n          value={formInput.password}\n          onChange={onChangePassword}\n          labelIcon={<Lock />}\n          placeholder=\"비밀번호를 입력해주세요.\"\n          minLength={SIGNUP.PASSWORD_MIN_LENGTH}\n          maxLength={SIGNUP.PASSWORD_MAX_LENGTH}\n          message={{ text: errorMessage.password, isError: true }}\n          required\n        />\n        <SignupNotificationInput\n          type=\"password\"\n          value={formInput.passwordConfirm}\n          onChange={onChangePasswordConfirm}\n          message={{ text: errorMessage.passwordConfirm, isError: true }}\n          labelIcon={<Lock />}\n          placeholder=\"비밀번호를 한번 더 입력해주세요.\"\n          minLength={SIGNUP.PASSWORD_MIN_LENGTH}\n          maxLength={SIGNUP.PASSWORD_MAX_LENGTH}\n          required\n        />\n        <SignupButton isColored={true} disabled={!isReadyToSubmit}>\n          회원가입\n        </SignupButton>\n      </SignupForm>\n    </CardTemplate>\n  );\n};\n\nexport default Signup;\n","import styled from 'styled-components';\nimport PALETTE from '../../../constants/palette';\n\nconst HorizontalLine = styled.hr`\n  margin: 3rem 0 0;\n  border: none;\n  height: 2px;\n  background-color: ${PALETTE.GRAY[200]};\n`;\n\nexport default HorizontalLine;\n","import React, { ChangeEvent, FC, FormEvent, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Button from '../../components/@common/Button/Button';\nimport CardTemplate from '../../components/@common/CardTemplate/CardTemplate';\nimport HorizontalLine from '../../components/@common/HorizontalLine/HorizontalLine';\nimport Subway from '../../components/@common/Icon/Subway';\nimport ListItem from '../../components/@common/ListItem/ListItem';\nimport Snackbar from '../../components/@common/Snackbar/Snackbar';\nimport { API_INFO } from '../../constants/api';\nimport { PAGE_INFO, STATION } from '../../constants/appInfo';\nimport { ERROR_MESSAGE } from '../../constants/message';\nimport useUpdateEffect from '../../hooks/useUpdateEffect/useUpdateEffect';\nimport { addStation, deleteStation, loadStations } from '../../redux/stationSlice';\nimport { RootState, useAppDispatch } from '../../redux/store';\nimport { isKoreanAndNumber } from '../../util/validator';\nimport { StationForm, StationList, StationName, StationNameInput } from './Stations.styles';\n\nconst Stations: FC = () => {\n  const apiOwner = useSelector((state: RootState) => state.api.owner);\n  const isLogin = useSelector((state: RootState) => state.login.isLogin);\n  const { stations, errorMessage } = useSelector((state: RootState) => state.station);\n  const dispatch = useAppDispatch();\n\n  const [stationInput, setStationInput] = useState('');\n  const [validationErrorMessage, setValidationErrorMessage] = useState('');\n  const isValidStationInput = stationInput !== '' && validationErrorMessage === '';\n\n  useEffect(() => {\n    if (stations.length === 0) {\n      dispatch(loadStations());\n    }\n  }, []);\n\n  useUpdateEffect(() => {\n    if (errorMessage === '') {\n      return;\n    }\n\n    alert(errorMessage);\n  }, [errorMessage]);\n\n  const onChangeStationInput = (event: ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n\n    if (value.length >= 2 && isKoreanAndNumber(value)) {\n      setValidationErrorMessage('');\n    } else {\n      setValidationErrorMessage(ERROR_MESSAGE.INVALID_STATION_NAME);\n    }\n\n    if (stations?.some(({ name }) => name === value)) {\n      setValidationErrorMessage(ERROR_MESSAGE.DUPLICATED_STATION_NAME);\n    }\n\n    setStationInput(value);\n  };\n\n  const onAddStation = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    dispatch(addStation(stationInput));\n    setStationInput('');\n  };\n\n  const onDeleteStation = (stationId: number) => () => {\n    dispatch(deleteStation(stationId));\n  };\n\n  return (\n    <CardTemplate\n      templateColor={API_INFO[apiOwner].themeColor[400]}\n      titleText={PAGE_INFO.STATIONS.text}\n    >\n      {isLogin && (\n        <>\n          <StationForm onSubmit={onAddStation}>\n            <StationNameInput\n              value={stationInput}\n              onChange={onChangeStationInput}\n              labelIcon={<Subway />}\n              minLength={STATION.NAME_MIN_LENGTH}\n              maxLength={STATION.NAME_MAX_LENGTH}\n              labelText={STATION.NAME_LABEL_TEXT}\n              message={{ text: validationErrorMessage, isError: true }}\n            />\n            <Button disabled={!isValidStationInput}>추가</Button>\n          </StationForm>\n          <HorizontalLine />\n        </>\n      )}\n\n      {stations && (\n        <StationList>\n          {stations.map((station) => (\n            <ListItem key={station.id} onDelete={onDeleteStation(station.id)}>\n              <Subway />\n              <StationName>{station.name}</StationName>\n            </ListItem>\n          ))}\n        </StationList>\n      )}\n    </CardTemplate>\n  );\n};\n\nexport default Stations;\n","import axios from 'axios';\nimport React, { FC, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport Subway from './components/@common/Icon/Subway';\nimport Header from './components/@shared/Header/Header';\nimport Main from './components/@shared/Main/Main';\nimport Navigation from './components/@shared/Navigation/Navigation';\nimport { API_INFO } from './constants/api';\nimport { APP_TITLE, COMMON_NAV_LIST, PAGE_INFO } from './constants/appInfo';\nimport PALETTE from './constants/palette';\nimport Home from './pages/Home/Home';\nimport Lines from './pages/Lines/Lines';\nimport Login from './pages/Login/Login';\nimport Sections from './pages/Sections/Sections';\nimport Signup from './pages/Signup/Signup';\nimport Stations from './pages/Stations/Stations';\nimport { RootState } from './redux/store';\nimport { getApiOwner, getBearerToken } from './storage/service';\n\naxios.defaults.baseURL = API_INFO[getApiOwner()].endPoint;\naxios.defaults.headers.common['Authorization'] = getBearerToken();\n\nconst App: FC = () => {\n  const apiOwner = useSelector((state: RootState) => state.api.owner);\n  const isLogin = useSelector((state: RootState) => state.login.isLogin);\n\n  useEffect(() => {\n    axios.defaults.baseURL = API_INFO[apiOwner].endPoint;\n  }, [apiOwner]);\n\n  useEffect(() => {\n    axios.defaults.headers.common['Authorization'] = getBearerToken();\n  }, [isLogin]);\n\n  return (\n    <>\n      <Header title={APP_TITLE} logo={<Subway color={PALETTE.BLACK[400]} />}>\n        <Navigation navInfoList={COMMON_NAV_LIST} />\n      </Header>\n      <Main>\n        <Switch>\n          <Route exact path={PAGE_INFO.HOME.path}>\n            <Home />\n          </Route>\n          <Route path={PAGE_INFO.SIGN_UP.path}>\n            <Signup />\n          </Route>\n          <Route path={PAGE_INFO.LOGIN.path}>\n            <Login />\n          </Route>\n          <Route path={PAGE_INFO.STATIONS.path}>\n            <Stations />\n          </Route>\n          <Route path={PAGE_INFO.LINES.path}>\n            <Lines />\n          </Route>\n          <Route path={PAGE_INFO.SECTIONS.path}>\n            <Sections />\n          </Route>\n        </Switch>\n      </Main>\n    </>\n  );\n};\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\nimport PALETTE from './constants/palette';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: sans-serif;\n    color: ${PALETTE.BLACK[400]};\n  }\n\n  a {\n    text-decoration: none;\n    cursor: pointer;\n  }\n\n  li {\n    list-style: none;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport GlobalStyle from './Global.styles';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}